example.c:
#   15| myTest_with_local_flow(MyBool *, int) -> void
#   15|   Block 0
#   15|     v0_0(void)                       = EnterFunction            : 
#   15|     mu0_1(unknown)                   = AliasedDefinition        : 
#   15|         ResultMemoryAccess = UnknownVvar(IR: myTest_with_local_flow)
#   15|     mu0_2(unknown)                   = UnmodeledDefinition      : 
#   15|     r0_3(glval<struct <unnamed> *>)  = VariableAddress[b]       : 
#   15|     m0_4(struct <unnamed> *)         = InitializeParameter[b]   : r0_3
#   15|         ResultMemoryAccess = b[0..7]
#   15|     r0_5(glval<int>)                 = VariableAddress[pos]     : 
#   15|     mu0_6(int)                       = InitializeParameter[pos] : r0_5
#   15|         ResultMemoryAccess = pos[0..3]
#   17|     r0_7(glval<struct <unnamed>>)    = VariableAddress[coords]  : 
#   17|     mu0_8(struct <unnamed>)          = Uninitialized[coords]    : r0_7
#   17|         ResultMemoryAccess = coords[0..7]
#   17|     r0_9(glval<int>)                 = FieldAddress[x]          : r0_7
#   17|     r0_10(int)                       = Constant[0]              : 
#   17|     mu0_11(int)                      = Store                    : r0_9, r0_10
#   17|         ResultMemoryAccess = coords[0..3]
#   17|     r0_12(glval<int>)                = FieldAddress[y]          : r0_7
#   17|     r0_13(int)                       = Constant[0]              : 
#   17|     mu0_14(int)                      = Store                    : r0_12, r0_13
#   17|         ResultMemoryAccess = coords[32..35]
#   19|     r0_15(glval<struct <unnamed> *>) = VariableAddress[b]       : 
#   19|     r0_16(struct <unnamed> *)        = Load                     : r0_15, m0_4
#   19|         OperandMemoryAccess(CopySource) = b[0..7]
#   19|     r0_17(glval<char>)               = FieldAddress[isTrue]     : r0_16
#   19|     r0_18(char)                      = Load                     : r0_17, mu0_2
#   19|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: myTest_with_local_flow)
#   19|     v0_19(void)                      = ConditionalBranch        : r0_18
#-----|   False -> Block 3
#-----|   True -> Block 2

#   17|   Block 1
#   17|     r1_0(int) = Constant[0] : 

#   20|   Block 2
#   20|     v2_0(void) = NoOp : 
#-----|   Goto -> Block 3

#   23|   Block 3
#   23|     v3_0(void)                     = NoOp                         : 
#   24|     r3_1(glval<int>)               = VariableAddress[pos]         : 
#   24|     r3_2(int)                      = Load                         : r3_1, mu0_2
#   24|     r3_3(int)                      = Constant[1]                  : 
#   24|     r3_4(int)                      = Add                          : r3_2, r3_3
#   24|     r3_5(glval<struct <unnamed>>)  = VariableAddress[coords]      : 
#   24|     r3_6(glval<int>)               = FieldAddress[y]              : r3_5
#   24|     mu3_7(int)                     = Store                        : r3_6, r3_4
#   24|         ResultMemoryAccess = coords[32..35]
#   24|     r3_8(glval<struct <unnamed>>)  = VariableAddress[coords]      : 
#   24|     r3_9(glval<int>)               = FieldAddress[x]              : r3_8
#   24|     mu3_10(int)                    = Store                        : r3_9, r3_4
#   24|         ResultMemoryAccess = coords[0..3]
#   26|     r3_11(glval<unknown>)          = FunctionAddress[getX]        : 
#   26|     r3_12(glval<struct <unnamed>>) = VariableAddress[coords]      : 
#   26|     r3_13(int)                     = Call                         : r3_11, r3_12
#   26|     mu3_14(unknown)                = ^CallSideEffect              : mu0_2
#   26|         OperandMemoryAccess(Operand) = UnknownVvar(IR: myTest_with_local_flow)
#   26|         ResultMemoryAccess = UnknownVvar(IR: myTest_with_local_flow)
#   26|     r3_15(glval<struct <unnamed>>) = VariableAddress[coords]      : 
#   26|     r3_16(glval<int>)              = FieldAddress[x]              : r3_15
#   26|     mu3_17(int)                    = Store                        : r3_16, r3_13
#   26|         ResultMemoryAccess = coords[0..3]
#   28|     r3_18(glval<unknown>)          = FunctionAddress[doSomething] : 
#   28|     r3_19(glval<int>)              = VariableAddress[pos]         : 
#   28|     r3_20(void *)                  = Convert                      : r3_19
#   28|     v3_21(void)                    = Call                         : r3_18, r3_20
#   28|     mu3_22(unknown)                = ^CallSideEffect              : mu0_2
#   28|         OperandMemoryAccess(Operand) = UnknownVvar(IR: myTest_with_local_flow)
#   28|         ResultMemoryAccess = UnknownVvar(IR: myTest_with_local_flow)
#   29|     v3_23(void)                    = NoOp                         : 
#   15|     v3_24(void)                    = ReturnVoid                   : 
#   15|     v3_25(void)                    = UnmodeledUse                 : mu*
#   15|     v3_26(void)                    = ExitFunction                 : 

test.cpp:
#    4| intraprocedural_with_local_flow() -> void
#    4|   Block 0
#    4|     v0_0(void)            = EnterFunction           : 
#    4|     mu0_1(unknown)        = AliasedDefinition       : 
#    4|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#    4|     mu0_2(unknown)        = UnmodeledDefinition     : 
#    5|     r0_3(glval<int>)      = VariableAddress[t2]     : 
#    5|     m0_4(int)             = Uninitialized[t2]       : r0_3
#    5|         ResultMemoryAccess = t2[0..3]
#    6|     r0_5(glval<int>)      = VariableAddress[t1]     : 
#    6|     r0_6(glval<unknown>)  = FunctionAddress[source] : 
#    6|     r0_7(int)             = Call                    : r0_6
#    6|     mu0_8(unknown)        = ^CallSideEffect         : mu0_2
#    6|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#    6|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#    6|     m0_9(int)             = Store                   : r0_5, r0_7
#    6|         ResultMemoryAccess = t1[0..3]
#    7|     r0_10(glval<unknown>) = FunctionAddress[sink]   : 
#    7|     r0_11(glval<int>)     = VariableAddress[t1]     : 
#    7|     r0_12(int)            = Load                    : r0_11, m0_9
#    7|         OperandMemoryAccess(CopySource) = t1[0..3]
#    7|     v0_13(void)           = Call                    : r0_10, r0_12
#    7|     mu0_14(unknown)       = ^CallSideEffect         : mu0_2
#    7|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#    7|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#    8|     r0_15(glval<int>)     = VariableAddress[t1]     : 
#    8|     r0_16(int)            = Load                    : r0_15, m0_9
#    8|         OperandMemoryAccess(CopySource) = t1[0..3]
#    8|     r0_17(glval<int>)     = VariableAddress[t2]     : 
#    8|     m0_18(int)            = Store                   : r0_17, r0_16
#    8|         ResultMemoryAccess = t2[0..3]
#    9|     r0_19(glval<unknown>) = FunctionAddress[sink]   : 
#    9|     r0_20(glval<int>)     = VariableAddress[t1]     : 
#    9|     r0_21(int)            = Load                    : r0_20, m0_9
#    9|         OperandMemoryAccess(CopySource) = t1[0..3]
#    9|     v0_22(void)           = Call                    : r0_19, r0_21
#    9|     mu0_23(unknown)       = ^CallSideEffect         : mu0_2
#    9|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#    9|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   10|     r0_24(glval<unknown>) = FunctionAddress[sink]   : 
#   10|     r0_25(glval<int>)     = VariableAddress[t2]     : 
#   10|     r0_26(int)            = Load                    : r0_25, m0_18
#   10|         OperandMemoryAccess(CopySource) = t2[0..3]
#   10|     v0_27(void)           = Call                    : r0_24, r0_26
#   10|     mu0_28(unknown)       = ^CallSideEffect         : mu0_2
#   10|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   10|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   11|     r0_29(glval<int>)     = VariableAddress[t1]     : 
#   11|     r0_30(int)            = Load                    : r0_29, m0_9
#   11|         OperandMemoryAccess(CopySource) = t1[0..3]
#   11|     r0_31(int)            = Constant[0]             : 
#   11|     r0_32(bool)           = CompareNE               : r0_30, r0_31
#   11|     v0_33(void)           = ConditionalBranch       : r0_32
#-----|   False -> Block 2
#-----|   True -> Block 1

#   12|   Block 1
#   12|     r1_0(int)            = Constant[0]           : 
#   12|     r1_1(glval<int>)     = VariableAddress[t2]   : 
#   12|     m1_2(int)            = Store                 : r1_1, r1_0
#   12|         ResultMemoryAccess = t2[0..3]
#   13|     r1_3(glval<unknown>) = FunctionAddress[sink] : 
#   13|     r1_4(glval<int>)     = VariableAddress[t2]   : 
#   13|     r1_5(int)            = Load                  : r1_4, m1_2
#   13|         OperandMemoryAccess(CopySource) = t2[0..3]
#   13|     v1_6(void)           = Call                  : r1_3, r1_5
#   13|     mu1_7(unknown)       = ^CallSideEffect       : mu0_2
#   13|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   13|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#-----|   Goto -> Block 2

#   15|   Block 2
#   15|     m2_0(int)            = Phi                   : from 0:m0_18, from 1:m1_2
#   15|         OperandMemoryAccess(Phi) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   15|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   15|     r2_1(glval<unknown>) = FunctionAddress[sink] : 
#   15|     r2_2(glval<int>)     = VariableAddress[t2]   : 
#   15|     r2_3(int)            = Load                  : r2_2, m2_0
#   15|         OperandMemoryAccess(CopySource) = t2[0..3]
#   15|     v2_4(void)           = Call                  : r2_1, r2_3
#   15|     mu2_5(unknown)       = ^CallSideEffect       : mu0_2
#   15|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   15|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   17|     r2_6(int)            = Constant[0]           : 
#   17|     r2_7(glval<int>)     = VariableAddress[t1]   : 
#   17|     m2_8(int)            = Store                 : r2_7, r2_6
#   17|         ResultMemoryAccess = t1[0..3]
#-----|   Goto -> Block 3

#   18|   Block 3
#   18|     m3_0(int)  = Phi               : from 2:m2_8, from 4:m4_3
#   18|         OperandMemoryAccess(Phi) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   18|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   18|     r3_1(bool) = Constant[0]       : 
#   18|     v3_2(void) = ConditionalBranch : r3_1
#-----|   False -> Block 5
#-----|   True -> Block 4

#   19|   Block 4
#   19|     r4_0(glval<int>) = VariableAddress[t2] : 
#   19|     r4_1(int)        = Load                : r4_0, m2_0
#   19|         OperandMemoryAccess(CopySource) = t2[0..3]
#   19|     r4_2(glval<int>) = VariableAddress[t1] : 
#   19|     m4_3(int)        = Store               : r4_2, r4_1
#   19|         ResultMemoryAccess = t1[0..3]
#-----|   Goto -> Block 3

#   21|   Block 5
#   21|     r5_0(glval<unknown>) = FunctionAddress[sink] : 
#   21|     r5_1(glval<int>)     = VariableAddress[t1]   : 
#   21|     r5_2(int)            = Load                  : r5_1, m3_0
#   21|         OperandMemoryAccess(CopySource) = t1[0..3]
#   21|     v5_3(void)           = Call                  : r5_0, r5_2
#   21|     mu5_4(unknown)       = ^CallSideEffect       : mu0_2
#   21|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   21|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   23|     r5_5(glval<int>)     = VariableAddress[i]    : 
#   23|     r5_6(int)            = Constant[0]           : 
#   23|     m5_7(int)            = Store                 : r5_5, r5_6
#   23|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 6

#   23|   Block 6
#   23|     m6_0(int)        = Phi                 : from 5:m5_7, from 7:m7_8
#   23|         OperandMemoryAccess(Phi) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   23|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   23|     m6_1(int)        = Phi                 : from 5:m3_0, from 7:m7_3
#   23|         OperandMemoryAccess(Phi) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   23|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   23|     r6_2(glval<int>) = VariableAddress[i]  : 
#   23|     r6_3(int)        = Load                : r6_2, m6_0
#   23|         OperandMemoryAccess(CopySource) = i[0..3]
#   23|     r6_4(glval<int>) = VariableAddress[t1] : 
#   23|     r6_5(int)        = Load                : r6_4, m6_1
#   23|         OperandMemoryAccess(CopySource) = t1[0..3]
#   23|     r6_6(bool)       = CompareLT           : r6_3, r6_5
#   23|     v6_7(void)       = ConditionalBranch   : r6_6
#-----|   False -> Block 8
#-----|   True -> Block 7

#   24|   Block 7
#   24|     r7_0(glval<int>) = VariableAddress[t2] : 
#   24|     r7_1(int)        = Load                : r7_0, m2_0
#   24|         OperandMemoryAccess(CopySource) = t2[0..3]
#   24|     r7_2(glval<int>) = VariableAddress[t1] : 
#   24|     m7_3(int)        = Store               : r7_2, r7_1
#   24|         ResultMemoryAccess = t1[0..3]
#   23|     r7_4(glval<int>) = VariableAddress[i]  : 
#   23|     r7_5(int)        = Load                : r7_4, m6_0
#   23|         OperandMemoryAccess(CopySource) = i[0..3]
#   23|     r7_6(int)        = Constant[1]         : 
#   23|     r7_7(int)        = Add                 : r7_5, r7_6
#   23|     m7_8(int)        = Store               : r7_4, r7_7
#   23|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 6

#   26|   Block 8
#   26|     r8_0(glval<unknown>) = FunctionAddress[sink] : 
#   26|     r8_1(glval<int>)     = VariableAddress[t1]   : 
#   26|     r8_2(int)            = Load                  : r8_1, m6_1
#   26|         OperandMemoryAccess(CopySource) = t1[0..3]
#   26|     v8_3(void)           = Call                  : r8_0, r8_2
#   26|     mu8_4(unknown)       = ^CallSideEffect       : mu0_2
#   26|         OperandMemoryAccess(Operand) = UnknownVvar(IR: intraprocedural_with_local_flow)
#   26|         ResultMemoryAccess = UnknownVvar(IR: intraprocedural_with_local_flow)
#   27|     v8_5(void)           = NoOp                  : 
#    4|     v8_6(void)           = ReturnVoid            : 
#    4|     v8_7(void)           = UnmodeledUse          : mu*
#    4|     v8_8(void)           = ExitFunction          : 

#   29| callee(int, int) -> void
#   29|   Block 0
#   29|     v0_0(void)            = EnterFunction          : 
#   29|     mu0_1(unknown)        = AliasedDefinition      : 
#   29|         ResultMemoryAccess = UnknownVvar(IR: callee)
#   29|     mu0_2(unknown)        = UnmodeledDefinition    : 
#   29|     r0_3(glval<int>)      = VariableAddress[t]     : 
#   29|     m0_4(int)             = InitializeParameter[t] : r0_3
#   29|         ResultMemoryAccess = t[0..3]
#   29|     r0_5(glval<int>)      = VariableAddress[c]     : 
#   29|     m0_6(int)             = InitializeParameter[c] : r0_5
#   29|         ResultMemoryAccess = c[0..3]
#   30|     r0_7(glval<unknown>)  = FunctionAddress[sink]  : 
#   30|     r0_8(glval<int>)      = VariableAddress[t]     : 
#   30|     r0_9(int)             = Load                   : r0_8, m0_4
#   30|         OperandMemoryAccess(CopySource) = t[0..3]
#   30|     v0_10(void)           = Call                   : r0_7, r0_9
#   30|     mu0_11(unknown)       = ^CallSideEffect        : mu0_2
#   30|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callee)
#   30|         ResultMemoryAccess = UnknownVvar(IR: callee)
#   31|     r0_12(glval<unknown>) = FunctionAddress[sink]  : 
#   31|     r0_13(glval<int>)     = VariableAddress[c]     : 
#   31|     r0_14(int)            = Load                   : r0_13, m0_6
#   31|         OperandMemoryAccess(CopySource) = c[0..3]
#   31|     v0_15(void)           = Call                   : r0_12, r0_14
#   31|     mu0_16(unknown)       = ^CallSideEffect        : mu0_2
#   31|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callee)
#   31|         ResultMemoryAccess = UnknownVvar(IR: callee)
#   32|     v0_17(void)           = NoOp                   : 
#   29|     v0_18(void)           = ReturnVoid             : 
#   29|     v0_19(void)           = UnmodeledUse           : mu*
#   29|     v0_20(void)           = ExitFunction           : 

#   34| caller() -> void
#   34|   Block 0
#   34|     v0_0(void)            = EnterFunction           : 
#   34|     mu0_1(unknown)        = AliasedDefinition       : 
#   34|         ResultMemoryAccess = UnknownVvar(IR: caller)
#   34|     mu0_2(unknown)        = UnmodeledDefinition     : 
#   35|     r0_3(glval<unknown>)  = FunctionAddress[callee] : 
#   35|     r0_4(glval<unknown>)  = FunctionAddress[source] : 
#   35|     r0_5(int)             = Call                    : r0_4
#   35|     mu0_6(unknown)        = ^CallSideEffect         : mu0_2
#   35|         OperandMemoryAccess(Operand) = UnknownVvar(IR: caller)
#   35|         ResultMemoryAccess = UnknownVvar(IR: caller)
#   35|     r0_7(int)             = Constant[0]             : 
#   35|     v0_8(void)            = Call                    : r0_3, r0_5, r0_7
#   35|     mu0_9(unknown)        = ^CallSideEffect         : mu0_2
#   35|         OperandMemoryAccess(Operand) = UnknownVvar(IR: caller)
#   35|         ResultMemoryAccess = UnknownVvar(IR: caller)
#   36|     r0_10(glval<unknown>) = FunctionAddress[callee] : 
#   36|     r0_11(int)            = Constant[1]             : 
#   36|     r0_12(glval<unknown>) = FunctionAddress[source] : 
#   36|     r0_13(int)            = Call                    : r0_12
#   36|     mu0_14(unknown)       = ^CallSideEffect         : mu0_2
#   36|         OperandMemoryAccess(Operand) = UnknownVvar(IR: caller)
#   36|         ResultMemoryAccess = UnknownVvar(IR: caller)
#   36|     v0_15(void)           = Call                    : r0_10, r0_11, r0_13
#   36|     mu0_16(unknown)       = ^CallSideEffect         : mu0_2
#   36|         OperandMemoryAccess(Operand) = UnknownVvar(IR: caller)
#   36|         ResultMemoryAccess = UnknownVvar(IR: caller)
#   37|     v0_17(void)           = NoOp                    : 
#   34|     v0_18(void)           = ReturnVoid              : 
#   34|     v0_19(void)           = UnmodeledUse            : mu*
#   34|     v0_20(void)           = ExitFunction            : 

#   39| branching(bool) -> void
#   39|   Block 0
#   39|     v0_0(void)            = EnterFunction           : 
#   39|     mu0_1(unknown)        = AliasedDefinition       : 
#   39|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   39|     mu0_2(unknown)        = UnmodeledDefinition     : 
#   39|     r0_3(glval<bool>)     = VariableAddress[b]      : 
#   39|     m0_4(bool)            = InitializeParameter[b]  : r0_3
#   39|         ResultMemoryAccess = b[0..0]
#   41|     r0_5(glval<int>)      = VariableAddress[t1]     : 
#   41|     r0_6(int)             = Constant[1]             : 
#   41|     m0_7(int)             = Store                   : r0_5, r0_6
#   41|         ResultMemoryAccess = t1[0..3]
#   41|     r0_8(glval<int>)      = VariableAddress[t2]     : 
#   41|     r0_9(int)             = Constant[2]             : 
#   41|     m0_10(int)            = Store                   : r0_8, r0_9
#   41|         ResultMemoryAccess = t2[0..3]
#   42|     r0_11(glval<int>)     = VariableAddress[t]      : 
#   42|     r0_12(glval<unknown>) = FunctionAddress[source] : 
#   42|     r0_13(int)            = Call                    : r0_12
#   42|     mu0_14(unknown)       = ^CallSideEffect         : mu0_2
#   42|         OperandMemoryAccess(Operand) = UnknownVvar(IR: branching)
#   42|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   42|     m0_15(int)            = Store                   : r0_11, r0_13
#   42|         ResultMemoryAccess = t[0..3]
#   43|     r0_16(glval<unknown>) = FunctionAddress[sink]   : 
#   43|     r0_17(glval<int>)     = VariableAddress[t]      : 
#   43|     r0_18(int)            = Load                    : r0_17, m0_15
#   43|         OperandMemoryAccess(CopySource) = t[0..3]
#   43|     r0_19(int)            = Constant[0]             : 
#   43|     r0_20(bool)           = CompareNE               : r0_18, r0_19
#   43|     v0_21(void)           = ConditionalBranch       : r0_20
#-----|   False -> Block 3
#-----|   True -> Block 2

#   43|   Block 1
#   43|     m1_0(int)         = Phi                         : from 2:m2_3, from 3:m3_3
#   43|         OperandMemoryAccess(Phi) = UnknownVvar(IR: branching)
#   43|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   43|     r1_1(glval<int>)  = VariableAddress[#temp43:10] : 
#   43|     r1_2(int)         = Load                        : r1_1, m1_0
#   43|         OperandMemoryAccess(CopySource) = #temp43:10[0..3]
#   43|     v1_3(void)        = Call                        : r0_16, r1_2
#   43|     mu1_4(unknown)    = ^CallSideEffect             : mu0_2
#   43|         OperandMemoryAccess(Operand) = UnknownVvar(IR: branching)
#   43|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   45|     r1_5(glval<bool>) = VariableAddress[b]          : 
#   45|     r1_6(bool)        = Load                        : r1_5, m0_4
#   45|         OperandMemoryAccess(CopySource) = b[0..0]
#   45|     v1_7(void)        = ConditionalBranch           : r1_6
#-----|   False -> Block 6
#-----|   True -> Block 5

#   43|   Block 2
#   43|     r2_0(glval<int>) = VariableAddress[t1]         : 
#   43|     r2_1(int)        = Load                        : r2_0, m0_7
#   43|         OperandMemoryAccess(CopySource) = t1[0..3]
#   43|     r2_2(glval<int>) = VariableAddress[#temp43:10] : 
#   43|     m2_3(int)        = Store                       : r2_2, r2_1
#   43|         ResultMemoryAccess = #temp43:10[0..3]
#-----|   Goto -> Block 1

#   43|   Block 3
#   43|     r3_0(glval<int>) = VariableAddress[t2]         : 
#   43|     r3_1(int)        = Load                        : r3_0, m0_10
#   43|         OperandMemoryAccess(CopySource) = t2[0..3]
#   43|     r3_2(glval<int>) = VariableAddress[#temp43:10] : 
#   43|     m3_3(int)        = Store                       : r3_2, r3_1
#   43|         ResultMemoryAccess = #temp43:10[0..3]
#-----|   Goto -> Block 1

#   45|   Block 4
#   45|     m4_0(int)             = Phi                        : from 5:m5_3, from 6:m6_3
#   45|         OperandMemoryAccess(Phi) = UnknownVvar(IR: branching)
#   45|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   45|     r4_1(glval<int>)      = VariableAddress[#temp45:9] : 
#   45|     r4_2(int)             = Load                       : r4_1, m4_0
#   45|         OperandMemoryAccess(CopySource) = #temp45:9[0..3]
#   45|     r4_3(glval<int>)      = VariableAddress[t]         : 
#   45|     m4_4(int)             = Store                      : r4_3, r4_2
#   45|         ResultMemoryAccess = t[0..3]
#   46|     r4_5(glval<unknown>)  = FunctionAddress[sink]      : 
#   46|     r4_6(glval<int>)      = VariableAddress[t]         : 
#   46|     r4_7(int)             = Load                       : r4_6, m4_4
#   46|         OperandMemoryAccess(CopySource) = t[0..3]
#   46|     v4_8(void)            = Call                       : r4_5, r4_7
#   46|     mu4_9(unknown)        = ^CallSideEffect            : mu0_2
#   46|         OperandMemoryAccess(Operand) = UnknownVvar(IR: branching)
#   46|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   50|     r4_10(glval<int>)     = VariableAddress[t1]        : 
#   50|     r4_11(glval<unknown>) = FunctionAddress[source]    : 
#   50|     r4_12(int)            = Call                       : r4_11
#   50|     mu4_13(unknown)       = ^CallSideEffect            : mu0_2
#   50|         OperandMemoryAccess(Operand) = UnknownVvar(IR: branching)
#   50|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   50|     m4_14(int)            = Store                      : r4_10, r4_12
#   50|         ResultMemoryAccess = t1[0..3]
#   50|     r4_15(glval<int>)     = VariableAddress[t]         : 
#   50|     r4_16(int)            = Constant[0]                : 
#   50|     m4_17(int)            = Store                      : r4_15, r4_16
#   50|         ResultMemoryAccess = t[0..3]
#   51|     r4_18(glval<bool>)    = VariableAddress[b]         : 
#   51|     r4_19(bool)           = Load                       : r4_18, m0_4
#   51|         OperandMemoryAccess(CopySource) = b[0..0]
#   51|     v4_20(void)           = ConditionalBranch          : r4_19
#-----|   False -> Block 8
#-----|   True -> Block 7

#   45|   Block 5
#   45|     r5_0(glval<int>) = VariableAddress[t1]        : 
#   45|     r5_1(int)        = Load                       : r5_0, m0_7
#   45|         OperandMemoryAccess(CopySource) = t1[0..3]
#   45|     r5_2(glval<int>) = VariableAddress[#temp45:9] : 
#   45|     m5_3(int)        = Store                      : r5_2, r5_1
#   45|         ResultMemoryAccess = #temp45:9[0..3]
#-----|   Goto -> Block 4

#   45|   Block 6
#   45|     r6_0(glval<int>) = VariableAddress[t2]        : 
#   45|     r6_1(int)        = Load                       : r6_0, m0_10
#   45|         OperandMemoryAccess(CopySource) = t2[0..3]
#   45|     r6_2(glval<int>) = VariableAddress[#temp45:9] : 
#   45|     m6_3(int)        = Store                      : r6_2, r6_1
#   45|         ResultMemoryAccess = #temp45:9[0..3]
#-----|   Goto -> Block 4

#   52|   Block 7
#   52|     r7_0(glval<int>) = VariableAddress[t1] : 
#   52|     r7_1(int)        = Load                : r7_0, m4_14
#   52|         OperandMemoryAccess(CopySource) = t1[0..3]
#   52|     r7_2(glval<int>) = VariableAddress[t]  : 
#   52|     m7_3(int)        = Store               : r7_2, r7_1
#   52|         ResultMemoryAccess = t[0..3]
#-----|   Goto -> Block 9

#   54|   Block 8
#   54|     r8_0(int)        = Constant[1]        : 
#   54|     r8_1(glval<int>) = VariableAddress[t] : 
#   54|     m8_2(int)        = Store              : r8_1, r8_0
#   54|         ResultMemoryAccess = t[0..3]
#-----|   Goto -> Block 9

#   58|   Block 9
#   58|     m9_0(int)            = Phi                   : from 7:m7_3, from 8:m8_2
#   58|         OperandMemoryAccess(Phi) = UnknownVvar(IR: branching)
#   58|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   58|     r9_1(glval<unknown>) = FunctionAddress[sink] : 
#   58|     r9_2(glval<int>)     = VariableAddress[t]    : 
#   58|     r9_3(int)            = Load                  : r9_2, m9_0
#   58|         OperandMemoryAccess(CopySource) = t[0..3]
#   58|     v9_4(void)           = Call                  : r9_1, r9_3
#   58|     mu9_5(unknown)       = ^CallSideEffect       : mu0_2
#   58|         OperandMemoryAccess(Operand) = UnknownVvar(IR: branching)
#   58|         ResultMemoryAccess = UnknownVvar(IR: branching)
#   60|     v9_6(void)           = NoOp                  : 
#   39|     v9_7(void)           = ReturnVoid            : 
#   39|     v9_8(void)           = UnmodeledUse          : mu*
#   39|     v9_9(void)           = ExitFunction          : 

#   66| identityOperations(int *) -> void
#   66|   Block 0
#   66|     v0_0(void)            = EnterFunction                : 
#   66|     mu0_1(unknown)        = AliasedDefinition            : 
#   66|         ResultMemoryAccess = UnknownVvar(IR: identityOperations)
#   66|     mu0_2(unknown)        = UnmodeledDefinition          : 
#   66|     r0_3(glval<int *>)    = VariableAddress[source1]     : 
#   66|     mu0_4(int *)          = InitializeParameter[source1] : r0_3
#   66|         ResultMemoryAccess = source1[0..7]
#   67|     r0_5(glval<int *>)    = VariableAddress[x1]          : 
#   67|     r0_6(glval<unknown>)  = FunctionAddress[move]        : 
#   67|     r0_7(glval<int *>)    = VariableAddress[source1]     : 
#   67|     r0_8(int *&&)         = Call                         : r0_6, r0_7
#   67|     r0_9(int *)           = Load                         : r0_8, mu0_2
#   67|     r0_10(int *)          = Convert                      : r0_9
#   67|     m0_11(int *)          = Store                        : r0_5, r0_10
#   67|         ResultMemoryAccess = x1[0..7]
#   68|     r0_12(glval<int *>)   = VariableAddress[x2]          : 
#   68|     r0_13(glval<int *>)   = VariableAddress[x1]          : 
#   68|     r0_14(int *)          = Load                         : r0_13, m0_11
#   68|         OperandMemoryAccess(CopySource) = x1[0..7]
#   68|     r0_15(int *)          = Convert                      : r0_14
#   68|     m0_16(int *)          = Store                        : r0_12, r0_15
#   68|         ResultMemoryAccess = x2[0..7]
#   69|     r0_17(glval<int *>)   = VariableAddress[x3]          : 
#   69|     r0_18(glval<int *>)   = VariableAddress[x2]          : 
#   69|     r0_19(int *)          = Load                         : r0_18, m0_16
#   69|         OperandMemoryAccess(CopySource) = x2[0..7]
#   69|     m0_20(int *)          = Store                        : r0_17, r0_19
#   69|         ResultMemoryAccess = x3[0..7]
#   70|     r0_21(glval<int *>)   = VariableAddress[x4]          : 
#   70|     r0_22(glval<int *>)   = VariableAddress[x3]          : 
#   70|     r0_23(int *)          = Load                         : r0_22, m0_20
#   70|         OperandMemoryAccess(CopySource) = x3[0..7]
#   70|     r0_24(int *)          = Convert                      : r0_23
#   70|     m0_25(int *)          = Store                        : r0_21, r0_24
#   70|         ResultMemoryAccess = x4[0..7]
#   71|     r0_26(glval<unknown>) = FunctionAddress[sink]        : 
#   71|     r0_27(glval<int *>)   = VariableAddress[x4]          : 
#   71|     r0_28(int *)          = Load                         : r0_27, m0_25
#   71|         OperandMemoryAccess(CopySource) = x4[0..7]
#   71|     v0_29(void)           = Call                         : r0_26, r0_28
#   71|     mu0_30(unknown)       = ^CallSideEffect              : mu0_2
#   71|         OperandMemoryAccess(Operand) = UnknownVvar(IR: identityOperations)
#   71|         ResultMemoryAccess = UnknownVvar(IR: identityOperations)
#   72|     v0_31(void)           = NoOp                         : 
#   66|     v0_32(void)           = ReturnVoid                   : 
#   66|     v0_33(void)           = UnmodeledUse                 : mu*
#   66|     v0_34(void)           = ExitFunction                 : 

#   74| trackUninitialized() -> void
#   74|   Block 0
#   74|     v0_0(void)            = EnterFunction         : 
#   74|     mu0_1(unknown)        = AliasedDefinition     : 
#   74|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   74|     mu0_2(unknown)        = UnmodeledDefinition   : 
#   75|     r0_3(glval<int>)      = VariableAddress[u1]   : 
#   75|     m0_4(int)             = Uninitialized[u1]     : r0_3
#   75|         ResultMemoryAccess = u1[0..3]
#   76|     r0_5(glval<unknown>)  = FunctionAddress[sink] : 
#   76|     r0_6(glval<int>)      = VariableAddress[u1]   : 
#   76|     r0_7(int)             = Load                  : r0_6, m0_4
#   76|         OperandMemoryAccess(CopySource) = u1[0..3]
#   76|     v0_8(void)            = Call                  : r0_5, r0_7
#   76|     mu0_9(unknown)        = ^CallSideEffect       : mu0_2
#   76|         OperandMemoryAccess(Operand) = UnknownVvar(IR: trackUninitialized)
#   76|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   77|     r0_10(int)            = Constant[2]           : 
#   77|     r0_11(glval<int>)     = VariableAddress[u1]   : 
#   77|     m0_12(int)            = Store                 : r0_11, r0_10
#   77|         ResultMemoryAccess = u1[0..3]
#   78|     r0_13(glval<unknown>) = FunctionAddress[sink] : 
#   78|     r0_14(glval<int>)     = VariableAddress[u1]   : 
#   78|     r0_15(int)            = Load                  : r0_14, m0_12
#   78|         OperandMemoryAccess(CopySource) = u1[0..3]
#   78|     v0_16(void)           = Call                  : r0_13, r0_15
#   78|     mu0_17(unknown)       = ^CallSideEffect       : mu0_2
#   78|         OperandMemoryAccess(Operand) = UnknownVvar(IR: trackUninitialized)
#   78|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   80|     r0_18(glval<int>)     = VariableAddress[i1]   : 
#   80|     r0_19(int)            = Constant[1]           : 
#   80|     m0_20(int)            = Store                 : r0_18, r0_19
#   80|         ResultMemoryAccess = i1[0..3]
#   81|     r0_21(glval<unknown>) = FunctionAddress[sink] : 
#   81|     r0_22(glval<int>)     = VariableAddress[i1]   : 
#   81|     r0_23(int)            = Load                  : r0_22, m0_20
#   81|         OperandMemoryAccess(CopySource) = i1[0..3]
#   81|     v0_24(void)           = Call                  : r0_21, r0_23
#   81|     mu0_25(unknown)       = ^CallSideEffect       : mu0_2
#   81|         OperandMemoryAccess(Operand) = UnknownVvar(IR: trackUninitialized)
#   81|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   83|     r0_26(glval<int>)     = VariableAddress[u2]   : 
#   83|     m0_27(int)            = Uninitialized[u2]     : r0_26
#   83|         ResultMemoryAccess = u2[0..3]
#   84|     r0_28(glval<unknown>) = FunctionAddress[sink] : 
#   84|     r0_29(glval<int>)     = VariableAddress[i1]   : 
#   84|     r0_30(int)            = Load                  : r0_29, m0_20
#   84|         OperandMemoryAccess(CopySource) = i1[0..3]
#   84|     r0_31(int)            = Constant[0]           : 
#   84|     r0_32(bool)           = CompareNE             : r0_30, r0_31
#   84|     v0_33(void)           = ConditionalBranch     : r0_32
#-----|   False -> Block 3
#-----|   True -> Block 2

#   84|   Block 1
#   84|     m1_0(int)            = Phi                        : from 2:m2_3, from 3:m3_2
#   84|         OperandMemoryAccess(Phi) = UnknownVvar(IR: trackUninitialized)
#   84|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   84|     r1_1(glval<int>)     = VariableAddress[#temp84:8] : 
#   84|     r1_2(int)            = Load                       : r1_1, m1_0
#   84|         OperandMemoryAccess(CopySource) = #temp84:8[0..3]
#   84|     v1_3(void)           = Call                       : r0_28, r1_2
#   84|     mu1_4(unknown)       = ^CallSideEffect            : mu0_2
#   84|         OperandMemoryAccess(Operand) = UnknownVvar(IR: trackUninitialized)
#   84|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   85|     r1_5(glval<int>)     = VariableAddress[u2]        : 
#   85|     r1_6(int)            = Load                       : r1_5, m0_27
#   85|         OperandMemoryAccess(CopySource) = u2[0..3]
#   85|     r1_7(glval<int>)     = VariableAddress[i1]        : 
#   85|     m1_8(int)            = Store                      : r1_7, r1_6
#   85|         ResultMemoryAccess = i1[0..3]
#   86|     r1_9(glval<unknown>) = FunctionAddress[sink]      : 
#   86|     r1_10(glval<int>)    = VariableAddress[i1]        : 
#   86|     r1_11(int)           = Load                       : r1_10, m1_8
#   86|         OperandMemoryAccess(CopySource) = i1[0..3]
#   86|     v1_12(void)          = Call                       : r1_9, r1_11
#   86|     mu1_13(unknown)      = ^CallSideEffect            : mu0_2
#   86|         OperandMemoryAccess(Operand) = UnknownVvar(IR: trackUninitialized)
#   86|         ResultMemoryAccess = UnknownVvar(IR: trackUninitialized)
#   87|     v1_14(void)          = NoOp                       : 
#   74|     v1_15(void)          = ReturnVoid                 : 
#   74|     v1_16(void)          = UnmodeledUse               : mu*
#   74|     v1_17(void)          = ExitFunction               : 

#   84|   Block 2
#   84|     r2_0(glval<int>) = VariableAddress[u2]        : 
#   84|     r2_1(int)        = Load                       : r2_0, m0_27
#   84|         OperandMemoryAccess(CopySource) = u2[0..3]
#   84|     r2_2(glval<int>) = VariableAddress[#temp84:8] : 
#   84|     m2_3(int)        = Store                      : r2_2, r2_1
#   84|         ResultMemoryAccess = #temp84:8[0..3]
#-----|   Goto -> Block 1

#   84|   Block 3
#   84|     r3_0(int)        = Constant[1]                : 
#   84|     r3_1(glval<int>) = VariableAddress[#temp84:8] : 
#   84|     m3_2(int)        = Store                      : r3_1, r3_0
#   84|         ResultMemoryAccess = #temp84:8[0..3]
#-----|   Goto -> Block 1

#   89| local_references(int &, int) -> void
#   89|   Block 0
#   89|     v0_0(void)            = EnterFunction                : 
#   89|     mu0_1(unknown)        = AliasedDefinition            : 
#   89|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#   89|     mu0_2(unknown)        = UnmodeledDefinition          : 
#   89|     r0_3(glval<int &>)    = VariableAddress[source1]     : 
#   89|     m0_4(int &)           = InitializeParameter[source1] : r0_3
#   89|         ResultMemoryAccess = source1[0..7]
#   89|     r0_5(glval<int>)      = VariableAddress[clean1]      : 
#   89|     m0_6(int)             = InitializeParameter[clean1]  : r0_5
#   89|         ResultMemoryAccess = clean1[0..3]
#   90|     r0_7(glval<unknown>)  = FunctionAddress[sink]        : 
#   90|     r0_8(glval<int &>)    = VariableAddress[source1]     : 
#   90|     r0_9(int &)           = Load                         : r0_8, m0_4
#   90|         OperandMemoryAccess(CopySource) = source1[0..7]
#   90|     r0_10(int)            = Load                         : r0_9, mu0_2
#   90|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: local_references)
#   90|     v0_11(void)           = Call                         : r0_7, r0_10
#   90|     mu0_12(unknown)       = ^CallSideEffect              : mu0_2
#   90|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#   90|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#   91|     r0_13(glval<int>)     = VariableAddress[clean1]      : 
#   91|     r0_14(int)            = Load                         : r0_13, m0_6
#   91|         OperandMemoryAccess(CopySource) = clean1[0..3]
#   91|     r0_15(glval<int &>)   = VariableAddress[source1]     : 
#   91|     r0_16(int &)          = Load                         : r0_15, m0_4
#   91|         OperandMemoryAccess(CopySource) = source1[0..7]
#   91|     mu0_17(int)           = Store                        : r0_16, r0_14
#   91|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#   92|     r0_18(glval<unknown>) = FunctionAddress[sink]        : 
#   92|     r0_19(glval<int &>)   = VariableAddress[source1]     : 
#   92|     r0_20(int &)          = Load                         : r0_19, m0_4
#   92|         OperandMemoryAccess(CopySource) = source1[0..7]
#   92|     r0_21(int)            = Load                         : r0_20, mu0_2
#   92|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: local_references)
#   92|     v0_22(void)           = Call                         : r0_18, r0_21
#   92|     mu0_23(unknown)       = ^CallSideEffect              : mu0_2
#   92|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#   92|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#  100|     r0_24(glval<int>)     = VariableAddress[t]           : 
#  100|     r0_25(glval<unknown>) = FunctionAddress[source]      : 
#  100|     r0_26(int)            = Call                         : r0_25
#  100|     mu0_27(unknown)       = ^CallSideEffect              : mu0_2
#  100|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#  100|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#  100|     mu0_28(int)           = Store                        : r0_24, r0_26
#  100|         ResultMemoryAccess = t[0..3]
#  101|     r0_29(glval<int &>)   = VariableAddress[ref]         : 
#  101|     r0_30(glval<int>)     = VariableAddress[t]           : 
#  101|     m0_31(int &)          = Store                        : r0_29, r0_30
#  101|         ResultMemoryAccess = ref[0..7]
#  102|     r0_32(glval<int>)     = VariableAddress[clean1]      : 
#  102|     r0_33(int)            = Load                         : r0_32, m0_6
#  102|         OperandMemoryAccess(CopySource) = clean1[0..3]
#  102|     r0_34(glval<int>)     = VariableAddress[t]           : 
#  102|     mu0_35(int)           = Store                        : r0_34, r0_33
#  102|         ResultMemoryAccess = t[0..3]
#  103|     r0_36(glval<unknown>) = FunctionAddress[sink]        : 
#  103|     r0_37(glval<int &>)   = VariableAddress[ref]         : 
#  103|     r0_38(int &)          = Load                         : r0_37, m0_31
#  103|         OperandMemoryAccess(CopySource) = ref[0..7]
#  103|     r0_39(int)            = Load                         : r0_38, mu0_2
#  103|     v0_40(void)           = Call                         : r0_36, r0_39
#  103|     mu0_41(unknown)       = ^CallSideEffect              : mu0_2
#  103|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#  103|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#  107|     r0_42(glval<int>)     = VariableAddress[t]           : 
#  107|     r0_43(glval<int>)     = VariableAddress[clean1]      : 
#  107|     r0_44(int)            = Load                         : r0_43, m0_6
#  107|         OperandMemoryAccess(CopySource) = clean1[0..3]
#  107|     mu0_45(int)           = Store                        : r0_42, r0_44
#  107|         ResultMemoryAccess = t[0..3]
#  108|     r0_46(glval<int &>)   = VariableAddress[ref]         : 
#  108|     r0_47(glval<int>)     = VariableAddress[t]           : 
#  108|     m0_48(int &)          = Store                        : r0_46, r0_47
#  108|         ResultMemoryAccess = ref[0..7]
#  109|     r0_49(glval<unknown>) = FunctionAddress[source]      : 
#  109|     r0_50(int)            = Call                         : r0_49
#  109|     mu0_51(unknown)       = ^CallSideEffect              : mu0_2
#  109|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#  109|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#  109|     r0_52(glval<int>)     = VariableAddress[t]           : 
#  109|     mu0_53(int)           = Store                        : r0_52, r0_50
#  109|         ResultMemoryAccess = t[0..3]
#  110|     r0_54(glval<unknown>) = FunctionAddress[sink]        : 
#  110|     r0_55(glval<int &>)   = VariableAddress[ref]         : 
#  110|     r0_56(int &)          = Load                         : r0_55, m0_48
#  110|         OperandMemoryAccess(CopySource) = ref[0..7]
#  110|     r0_57(int)            = Load                         : r0_56, mu0_2
#  110|     v0_58(void)           = Call                         : r0_54, r0_57
#  110|     mu0_59(unknown)       = ^CallSideEffect              : mu0_2
#  110|         OperandMemoryAccess(Operand) = UnknownVvar(IR: local_references)
#  110|         ResultMemoryAccess = UnknownVvar(IR: local_references)
#  112|     v0_60(void)           = NoOp                         : 
#   89|     v0_61(void)           = ReturnVoid                   : 
#   89|     v0_62(void)           = UnmodeledUse                 : mu*
#   89|     v0_63(void)           = ExitFunction                 : 

#  116| twoIntFields::getFirst() -> int
#  116|   Block 0
#  116|     v0_0(void)                = EnterFunction            : 
#  116|     mu0_1(unknown)            = AliasedDefinition        : 
#  116|         ResultMemoryAccess = UnknownVvar(IR: getFirst)
#  116|     mu0_2(unknown)            = UnmodeledDefinition      : 
#  116|     r0_3(glval<twoIntFields>) = InitializeThis           : 
#  116|     r0_4(glval<int>)          = VariableAddress[#return] : 
#-----|     r0_5(twoIntFields *)      = CopyValue                : r0_3
#  116|     r0_6(glval<int>)          = FieldAddress[m1]         : r0_5
#  116|     r0_7(int)                 = Load                     : r0_6, mu0_2
#  116|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: getFirst)
#  116|     m0_8(int)                 = Store                    : r0_4, r0_7
#  116|         ResultMemoryAccess = #return[0..3]
#  116|     r0_9(glval<int>)          = VariableAddress[#return] : 
#  116|     v0_10(void)               = ReturnValue              : r0_9, m0_8
#  116|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  116|     v0_11(void)               = UnmodeledUse             : mu*
#  116|     v0_12(void)               = ExitFunction             : 

#  119| following_pointers(int[], int[], twoIntFields, twoIntFields *, ..(*)(..)) -> void
#  119|   Block 0
#  119|     v0_0(void)                     = EnterFunction                              : 
#  119|     mu0_1(unknown)                 = AliasedDefinition                          : 
#  119|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  119|     mu0_2(unknown)                 = UnmodeledDefinition                        : 
#  120|     r0_3(glval<int[]>)             = VariableAddress[sourceArray1]              : 
#  120|     mu0_4(int[])                   = InitializeParameter[sourceArray1]          : r0_3
#  121|     r0_5(glval<int[]>)             = VariableAddress[cleanArray1]               : 
#  121|     m0_6(int[])                    = InitializeParameter[cleanArray1]           : r0_5
#  122|     r0_7(glval<twoIntFields>)      = VariableAddress[sourceStruct1]             : 
#  122|     m0_8(twoIntFields)             = InitializeParameter[sourceStruct1]         : r0_7
#  122|         ResultMemoryAccess = sourceStruct1[0..7]
#  123|     r0_9(glval<twoIntFields *>)    = VariableAddress[sourceStruct1_ptr]         : 
#  123|     m0_10(twoIntFields *)          = InitializeParameter[sourceStruct1_ptr]     : r0_9
#  123|         ResultMemoryAccess = sourceStruct1_ptr[0..7]
#  124|     r0_11(glval<..(*)(..)>)        = VariableAddress[sourceFunctionPointer]     : 
#  124|     m0_12(..(*)(..))               = InitializeParameter[sourceFunctionPointer] : r0_11
#  124|         ResultMemoryAccess = sourceFunctionPointer[0..7]
#  126|     r0_13(glval<unknown>)          = FunctionAddress[sink]                      : 
#  126|     r0_14(glval<int *>)            = VariableAddress[sourceArray1]              : 
#  126|     r0_15(int *)                   = Load                                       : r0_14, mu0_2
#  126|     v0_16(void)                    = Call                                       : r0_13, r0_15
#  126|     mu0_17(unknown)                = ^CallSideEffect                            : mu0_2
#  126|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  126|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  128|     r0_18(glval<unknown>)          = FunctionAddress[sink]                      : 
#  128|     r0_19(glval<int *>)            = VariableAddress[sourceArray1]              : 
#  128|     r0_20(int *)                   = Load                                       : r0_19, mu0_2
#  128|     r0_21(int)                     = Constant[0]                                : 
#  128|     r0_22(int *)                   = PointerAdd[4]                              : r0_20, r0_21
#  128|     r0_23(int)                     = Load                                       : r0_22, mu0_2
#  128|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: following_pointers)
#  128|     v0_24(void)                    = Call                                       : r0_18, r0_23
#  128|     mu0_25(unknown)                = ^CallSideEffect                            : mu0_2
#  128|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  128|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  129|     r0_26(glval<unknown>)          = FunctionAddress[sink]                      : 
#  129|     r0_27(glval<int *>)            = VariableAddress[sourceArray1]              : 
#  129|     r0_28(int *)                   = Load                                       : r0_27, mu0_2
#  129|     r0_29(int)                     = Load                                       : r0_28, mu0_2
#  129|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: following_pointers)
#  129|     v0_30(void)                    = Call                                       : r0_26, r0_29
#  129|     mu0_31(unknown)                = ^CallSideEffect                            : mu0_2
#  129|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  129|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  130|     r0_32(glval<unknown>)          = FunctionAddress[sink]                      : 
#  130|     r0_33(glval<int *>)            = VariableAddress[sourceArray1]              : 
#  130|     v0_34(void)                    = Call                                       : r0_32, r0_33
#  130|     mu0_35(unknown)                = ^CallSideEffect                            : mu0_2
#  130|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  130|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  132|     r0_36(glval<unknown>)          = FunctionAddress[sink]                      : 
#  132|     r0_37(glval<twoIntFields>)     = VariableAddress[sourceStruct1]             : 
#  132|     r0_38(glval<int>)              = FieldAddress[m1]                           : r0_37
#  132|     r0_39(int)                     = Load                                       : r0_38, m0_8
#  132|         OperandMemoryAccess(CopySource) = sourceStruct1[0..7]
#  132|     v0_40(void)                    = Call                                       : r0_36, r0_39
#  132|     mu0_41(unknown)                = ^CallSideEffect                            : mu0_2
#  132|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  132|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  133|     r0_42(glval<unknown>)          = FunctionAddress[sink]                      : 
#  133|     r0_43(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  133|     r0_44(twoIntFields *)          = Load                                       : r0_43, m0_10
#  133|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  133|     r0_45(glval<int>)              = FieldAddress[m1]                           : r0_44
#  133|     r0_46(int)                     = Load                                       : r0_45, mu0_2
#  133|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: following_pointers)
#  133|     v0_47(void)                    = Call                                       : r0_42, r0_46
#  133|     mu0_48(unknown)                = ^CallSideEffect                            : mu0_2
#  133|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  133|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  134|     r0_49(glval<unknown>)          = FunctionAddress[sink]                      : 
#  134|     r0_50(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  134|     r0_51(twoIntFields *)          = Load                                       : r0_50, m0_10
#  134|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  134|     r0_52(glval<unknown>)          = FunctionAddress[getFirst]                  : 
#  134|     r0_53(int)                     = Call                                       : r0_52, this:r0_51
#  134|     mu0_54(unknown)                = ^CallSideEffect                            : mu0_2
#  134|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  134|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  134|     v0_55(void)                    = Call                                       : r0_49, r0_53
#  134|     mu0_56(unknown)                = ^CallSideEffect                            : mu0_2
#  134|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  134|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  136|     r0_57(glval<unknown>)          = FunctionAddress[source]                    : 
#  136|     r0_58(int)                     = Call                                       : r0_57
#  136|     mu0_59(unknown)                = ^CallSideEffect                            : mu0_2
#  136|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  136|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  136|     r0_60(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  136|     r0_61(twoIntFields *)          = Load                                       : r0_60, m0_10
#  136|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  136|     r0_62(glval<int>)              = FieldAddress[m1]                           : r0_61
#  136|     mu0_63(int)                    = Store                                      : r0_62, r0_58
#  136|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  137|     r0_64(glval<unknown>)          = FunctionAddress[sink]                      : 
#  137|     r0_65(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  137|     r0_66(twoIntFields *)          = Load                                       : r0_65, m0_10
#  137|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  137|     r0_67(glval<int>)              = FieldAddress[m1]                           : r0_66
#  137|     r0_68(int)                     = Load                                       : r0_67, mu0_2
#  137|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: following_pointers)
#  137|     v0_69(void)                    = Call                                       : r0_64, r0_68
#  137|     mu0_70(unknown)                = ^CallSideEffect                            : mu0_2
#  137|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  137|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  138|     r0_71(glval<unknown>)          = FunctionAddress[sink]                      : 
#  138|     r0_72(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  138|     r0_73(twoIntFields *)          = Load                                       : r0_72, m0_10
#  138|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  138|     r0_74(glval<unknown>)          = FunctionAddress[getFirst]                  : 
#  138|     r0_75(int)                     = Call                                       : r0_74, this:r0_73
#  138|     mu0_76(unknown)                = ^CallSideEffect                            : mu0_2
#  138|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  138|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  138|     v0_77(void)                    = Call                                       : r0_71, r0_75
#  138|     mu0_78(unknown)                = ^CallSideEffect                            : mu0_2
#  138|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  138|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  139|     r0_79(glval<unknown>)          = FunctionAddress[sink]                      : 
#  139|     r0_80(glval<twoIntFields *>)   = VariableAddress[sourceStruct1_ptr]         : 
#  139|     r0_81(twoIntFields *)          = Load                                       : r0_80, m0_10
#  139|         OperandMemoryAccess(CopySource) = sourceStruct1_ptr[0..7]
#  139|     r0_82(glval<int>)              = FieldAddress[m2]                           : r0_81
#  139|     r0_83(int)                     = Load                                       : r0_82, mu0_2
#  139|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: following_pointers)
#  139|     v0_84(void)                    = Call                                       : r0_79, r0_83
#  139|     mu0_85(unknown)                = ^CallSideEffect                            : mu0_2
#  139|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  139|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  140|     r0_86(glval<unknown>)          = FunctionAddress[sink]                      : 
#  140|     r0_87(glval<twoIntFields>)     = VariableAddress[sourceStruct1]             : 
#  140|     r0_88(glval<int>)              = FieldAddress[m1]                           : r0_87
#  140|     r0_89(int)                     = Load                                       : r0_88, m0_8
#  140|         OperandMemoryAccess(CopySource) = sourceStruct1[0..7]
#  140|     v0_90(void)                    = Call                                       : r0_86, r0_89
#  140|     mu0_91(unknown)                = ^CallSideEffect                            : mu0_2
#  140|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  140|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  142|     r0_92(glval<twoIntFields>)     = VariableAddress[s]                         : 
#  142|     m0_93(twoIntFields)            = Uninitialized[s]                           : r0_92
#  142|         ResultMemoryAccess = s[0..7]
#  142|     r0_94(glval<int>)              = FieldAddress[m1]                           : r0_92
#  142|     r0_95(glval<unknown>)          = FunctionAddress[source]                    : 
#  142|     r0_96(int)                     = Call                                       : r0_95
#  142|     mu0_97(unknown)                = ^CallSideEffect                            : mu0_2
#  142|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  142|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  142|     m0_98(int)                     = Store                                      : r0_94, r0_96
#  142|         ResultMemoryAccess = s[0..3]
#  142|     r0_99(glval<int>)              = FieldAddress[m2]                           : r0_92
#  142|     r0_100(glval<unknown>)         = FunctionAddress[source]                    : 
#  142|     r0_101(int)                    = Call                                       : r0_100
#  142|     mu0_102(unknown)               = ^CallSideEffect                            : mu0_2
#  142|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  142|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  142|     mu0_103(int)                   = Store                                      : r0_99, r0_101
#  142|         ResultMemoryAccess = s[32..35]
#  145|     r0_104(glval<unknown>)         = FunctionAddress[sink]                      : 
#  145|     r0_105(glval<twoIntFields>)    = VariableAddress[s]                         : 
#  145|     r0_106(glval<int>)             = FieldAddress[m2]                           : r0_105
#  145|     r0_107(int)                    = Load                                       : r0_106, mu0_2
#  145|     v0_108(void)                   = Call                                       : r0_104, r0_107
#  145|     mu0_109(unknown)               = ^CallSideEffect                            : mu0_2
#  145|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  145|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  147|     r0_110(glval<twoIntFields[1]>) = VariableAddress[sArray]                    : 
#  147|     mu0_111(twoIntFields[1])       = Uninitialized[sArray]                      : r0_110
#  147|         ResultMemoryAccess = sArray[0..7]
#  147|     r0_112(int)                    = Constant[0]                                : 
#  147|     r0_113(glval<twoIntFields>)    = PointerAdd                                 : r0_110, r0_112
#  147|     r0_114(glval<int>)             = FieldAddress[m1]                           : r0_113
#  147|     r0_115(glval<unknown>)         = FunctionAddress[source]                    : 
#  147|     r0_116(int)                    = Call                                       : r0_115
#  147|     mu0_117(unknown)               = ^CallSideEffect                            : mu0_2
#  147|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  147|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  147|     mu0_118(int)                   = Store                                      : r0_114, r0_116
#  147|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  147|     r0_119(glval<int>)             = FieldAddress[m2]                           : r0_113
#  147|     r0_120(glval<unknown>)         = FunctionAddress[source]                    : 
#  147|     r0_121(int)                    = Call                                       : r0_120
#  147|     mu0_122(unknown)               = ^CallSideEffect                            : mu0_2
#  147|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  147|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  147|     mu0_123(int)                   = Store                                      : r0_119, r0_121
#  147|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  149|     r0_124(glval<unknown>)         = FunctionAddress[sink]                      : 
#  149|     r0_125(glval<twoIntFields[1]>) = VariableAddress[sArray]                    : 
#  149|     r0_126(twoIntFields *)         = Convert                                    : r0_125
#  149|     r0_127(int)                    = Constant[0]                                : 
#  149|     r0_128(twoIntFields *)         = PointerAdd[8]                              : r0_126, r0_127
#  149|     r0_129(glval<int>)             = FieldAddress[m2]                           : r0_128
#  149|     r0_130(int)                    = Load                                       : r0_129, mu0_2
#  149|     v0_131(void)                   = Call                                       : r0_124, r0_130
#  149|     mu0_132(unknown)               = ^CallSideEffect                            : mu0_2
#  149|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  149|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  151|     r0_133(glval<twoIntFields>)    = VariableAddress[sSwapped]                  : 
#  151|     m0_134(twoIntFields)           = Uninitialized[sSwapped]                    : r0_133
#  151|         ResultMemoryAccess = sSwapped[0..7]
#  151|     r0_135(glval<int>)             = FieldAddress[m1]                           : r0_133
#  151|     r0_136(int)                    = Constant[0]                                : 
#  151|     m0_137(int)                    = Store                                      : r0_135, r0_136
#  151|         ResultMemoryAccess = sSwapped[0..3]
#  151|     r0_138(glval<int>)             = FieldAddress[m2]                           : r0_133
#  151|     r0_139(glval<unknown>)         = FunctionAddress[source]                    : 
#  151|     r0_140(int)                    = Call                                       : r0_139
#  151|     mu0_141(unknown)               = ^CallSideEffect                            : mu0_2
#  151|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  151|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  151|     mu0_142(int)                   = Store                                      : r0_138, r0_140
#  151|         ResultMemoryAccess = sSwapped[32..35]
#  153|     r0_143(glval<unknown>)         = FunctionAddress[sink]                      : 
#  153|     r0_144(glval<twoIntFields>)    = VariableAddress[sSwapped]                  : 
#  153|     r0_145(glval<int>)             = FieldAddress[m2]                           : r0_144
#  153|     r0_146(int)                    = Load                                       : r0_145, mu0_2
#  153|     v0_147(void)                   = Call                                       : r0_143, r0_146
#  153|     mu0_148(unknown)               = ^CallSideEffect                            : mu0_2
#  153|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  153|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  155|     r0_149(glval<unknown>)         = FunctionAddress[sink]                      : 
#  155|     r0_150(glval<..(*)(..)>)       = VariableAddress[sourceFunctionPointer]     : 
#  155|     r0_151(..(*)(..))              = Load                                       : r0_150, m0_12
#  155|         OperandMemoryAccess(CopySource) = sourceFunctionPointer[0..7]
#  155|     r0_152(int)                    = Call                                       : r0_151
#  155|     mu0_153(unknown)               = ^CallSideEffect                            : mu0_2
#  155|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  155|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  155|     v0_154(void)                   = Call                                       : r0_149, r0_152
#  155|     mu0_155(unknown)               = ^CallSideEffect                            : mu0_2
#  155|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  155|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  157|     r0_156(glval<int[2]>)          = VariableAddress[stackArray]                : 
#  157|     mu0_157(int[2])                = Uninitialized[stackArray]                  : r0_156
#  157|         ResultMemoryAccess = stackArray[0..7]
#  157|     r0_158(int)                    = Constant[0]                                : 
#  157|     r0_159(glval<int>)             = PointerAdd                                 : r0_156, r0_158
#  157|     r0_160(glval<unknown>)         = FunctionAddress[source]                    : 
#  157|     r0_161(int)                    = Call                                       : r0_160
#  157|     mu0_162(unknown)               = ^CallSideEffect                            : mu0_2
#  157|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  157|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  157|     mu0_163(int)                   = Store                                      : r0_159, r0_161
#  157|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  157|     r0_164(int)                    = Constant[1]                                : 
#  157|     r0_165(glval<int>)             = PointerAdd                                 : r0_156, r0_164
#  157|     r0_166(glval<unknown>)         = FunctionAddress[source]                    : 
#  157|     r0_167(int)                    = Call                                       : r0_166
#  157|     mu0_168(unknown)               = ^CallSideEffect                            : mu0_2
#  157|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  157|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  157|     mu0_169(int)                   = Store                                      : r0_165, r0_167
#  157|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  158|     r0_170(glval<unknown>)         = FunctionAddress[source]                    : 
#  158|     r0_171(int)                    = Call                                       : r0_170
#  158|     mu0_172(unknown)               = ^CallSideEffect                            : mu0_2
#  158|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  158|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  158|     r0_173(glval<int[2]>)          = VariableAddress[stackArray]                : 
#  158|     r0_174(int *)                  = Convert                                    : r0_173
#  158|     r0_175(int)                    = Constant[0]                                : 
#  158|     r0_176(int *)                  = PointerAdd[4]                              : r0_174, r0_175
#  158|     mu0_177(int)                   = Store                                      : r0_176, r0_171
#  158|         ResultMemoryAccess = stackArray[0..3]
#  159|     r0_178(glval<unknown>)         = FunctionAddress[sink]                      : 
#  159|     r0_179(glval<int[2]>)          = VariableAddress[stackArray]                : 
#  159|     r0_180(int *)                  = Convert                                    : r0_179
#  159|     v0_181(void)                   = Call                                       : r0_178, r0_180
#  159|     mu0_182(unknown)               = ^CallSideEffect                            : mu0_2
#  159|         OperandMemoryAccess(Operand) = UnknownVvar(IR: following_pointers)
#  159|         ResultMemoryAccess = UnknownVvar(IR: following_pointers)
#  160|     v0_183(void)                   = NoOp                                       : 
#  119|     v0_184(void)                   = ReturnVoid                                 : 
#  119|     v0_185(void)                   = UnmodeledUse                               : mu*
#  119|     v0_186(void)                   = ExitFunction                               : 

#  162| alwaysAssignSource(int *) -> int
#  162|   Block 0
#  162|     v0_0(void)           = EnterFunction            : 
#  162|     mu0_1(unknown)       = AliasedDefinition        : 
#  162|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssignSource)
#  162|     mu0_2(unknown)       = UnmodeledDefinition      : 
#  162|     r0_3(glval<int *>)   = VariableAddress[out]     : 
#  162|     m0_4(int *)          = InitializeParameter[out] : r0_3
#  162|         ResultMemoryAccess = out[0..7]
#  163|     r0_5(glval<unknown>) = FunctionAddress[source]  : 
#  163|     r0_6(int)            = Call                     : r0_5
#  163|     mu0_7(unknown)       = ^CallSideEffect          : mu0_2
#  163|         OperandMemoryAccess(Operand) = UnknownVvar(IR: alwaysAssignSource)
#  163|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssignSource)
#  163|     r0_8(glval<int *>)   = VariableAddress[out]     : 
#  163|     r0_9(int *)          = Load                     : r0_8, m0_4
#  163|         OperandMemoryAccess(CopySource) = out[0..7]
#  163|     mu0_10(int)          = Store                    : r0_9, r0_6
#  163|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssignSource)
#  164|     r0_11(glval<int>)    = VariableAddress[#return] : 
#  164|     r0_12(int)           = Constant[0]              : 
#  164|     m0_13(int)           = Store                    : r0_11, r0_12
#  164|         ResultMemoryAccess = #return[0..3]
#  162|     r0_14(glval<int>)    = VariableAddress[#return] : 
#  162|     v0_15(void)          = ReturnValue              : r0_14, m0_13
#  162|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  162|     v0_16(void)          = UnmodeledUse             : mu*
#  162|     v0_17(void)          = ExitFunction             : 

#  167| alwaysAssign0(int *) -> int
#  167|   Block 0
#  167|     v0_0(void)         = EnterFunction            : 
#  167|     mu0_1(unknown)     = AliasedDefinition        : 
#  167|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssign0)
#  167|     mu0_2(unknown)     = UnmodeledDefinition      : 
#  167|     r0_3(glval<int *>) = VariableAddress[out]     : 
#  167|     m0_4(int *)        = InitializeParameter[out] : r0_3
#  167|         ResultMemoryAccess = out[0..7]
#  168|     r0_5(int)          = Constant[0]              : 
#  168|     r0_6(glval<int *>) = VariableAddress[out]     : 
#  168|     r0_7(int *)        = Load                     : r0_6, m0_4
#  168|         OperandMemoryAccess(CopySource) = out[0..7]
#  168|     mu0_8(int)         = Store                    : r0_7, r0_5
#  168|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssign0)
#  169|     r0_9(glval<int>)   = VariableAddress[#return] : 
#  169|     r0_10(int)         = Constant[0]              : 
#  169|     m0_11(int)         = Store                    : r0_9, r0_10
#  169|         ResultMemoryAccess = #return[0..3]
#  167|     r0_12(glval<int>)  = VariableAddress[#return] : 
#  167|     v0_13(void)        = ReturnValue              : r0_12, m0_11
#  167|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  167|     v0_14(void)        = UnmodeledUse             : mu*
#  167|     v0_15(void)        = ExitFunction             : 

#  172| alwaysAssignInput(int *, int) -> int
#  172|   Block 0
#  172|     v0_0(void)         = EnterFunction            : 
#  172|     mu0_1(unknown)     = AliasedDefinition        : 
#  172|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssignInput)
#  172|     mu0_2(unknown)     = UnmodeledDefinition      : 
#  172|     r0_3(glval<int *>) = VariableAddress[out]     : 
#  172|     m0_4(int *)        = InitializeParameter[out] : r0_3
#  172|         ResultMemoryAccess = out[0..7]
#  172|     r0_5(glval<int>)   = VariableAddress[in]      : 
#  172|     m0_6(int)          = InitializeParameter[in]  : r0_5
#  172|         ResultMemoryAccess = in[0..3]
#  173|     r0_7(glval<int>)   = VariableAddress[in]      : 
#  173|     r0_8(int)          = Load                     : r0_7, m0_6
#  173|         OperandMemoryAccess(CopySource) = in[0..3]
#  173|     r0_9(glval<int *>) = VariableAddress[out]     : 
#  173|     r0_10(int *)       = Load                     : r0_9, m0_4
#  173|         OperandMemoryAccess(CopySource) = out[0..7]
#  173|     mu0_11(int)        = Store                    : r0_10, r0_8
#  173|         ResultMemoryAccess = UnknownVvar(IR: alwaysAssignInput)
#  174|     r0_12(glval<int>)  = VariableAddress[#return] : 
#  174|     r0_13(int)         = Constant[0]              : 
#  174|     m0_14(int)         = Store                    : r0_12, r0_13
#  174|         ResultMemoryAccess = #return[0..3]
#  172|     r0_15(glval<int>)  = VariableAddress[#return] : 
#  172|     v0_16(void)        = ReturnValue              : r0_15, m0_14
#  172|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  172|     v0_17(void)        = UnmodeledUse             : mu*
#  172|     v0_18(void)        = ExitFunction             : 

#  181| returnParameter(int) -> int
#  181|   Block 0
#  181|     v0_0(void)       = EnterFunction            : 
#  181|     mu0_1(unknown)   = AliasedDefinition        : 
#  181|         ResultMemoryAccess = UnknownVvar(IR: returnParameter)
#  181|     mu0_2(unknown)   = UnmodeledDefinition      : 
#  181|     r0_3(glval<int>) = VariableAddress[p]       : 
#  181|     m0_4(int)        = InitializeParameter[p]   : r0_3
#  181|         ResultMemoryAccess = p[0..3]
#  182|     r0_5(glval<int>) = VariableAddress[#return] : 
#  182|     r0_6(glval<int>) = VariableAddress[p]       : 
#  182|     r0_7(int)        = Load                     : r0_6, m0_4
#  182|         OperandMemoryAccess(CopySource) = p[0..3]
#  182|     m0_8(int)        = Store                    : r0_5, r0_7
#  182|         ResultMemoryAccess = #return[0..3]
#  181|     r0_9(glval<int>) = VariableAddress[#return] : 
#  181|     v0_10(void)      = ReturnValue              : r0_9, m0_8
#  181|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  181|     v0_11(void)      = UnmodeledUse             : mu*
#  181|     v0_12(void)      = ExitFunction             : 

#  185| callReturnParameter() -> void
#  185|   Block 0
#  185|     v0_0(void)            = EnterFunction                    : 
#  185|     mu0_1(unknown)        = AliasedDefinition                : 
#  185|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  185|     mu0_2(unknown)        = UnmodeledDefinition              : 
#  186|     r0_3(glval<int>)      = VariableAddress[x]               : 
#  186|     r0_4(glval<unknown>)  = FunctionAddress[returnParameter] : 
#  186|     r0_5(glval<unknown>)  = FunctionAddress[source]          : 
#  186|     r0_6(int)             = Call                             : r0_5
#  186|     mu0_7(unknown)        = ^CallSideEffect                  : mu0_2
#  186|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  186|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  186|     r0_8(int)             = Call                             : r0_4, r0_6
#  186|     mu0_9(unknown)        = ^CallSideEffect                  : mu0_2
#  186|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  186|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  186|     m0_10(int)            = Store                            : r0_3, r0_8
#  186|         ResultMemoryAccess = x[0..3]
#  187|     r0_11(glval<int>)     = VariableAddress[y]               : 
#  187|     r0_12(glval<int>)     = VariableAddress[x]               : 
#  187|     r0_13(int)            = Load                             : r0_12, m0_10
#  187|         OperandMemoryAccess(CopySource) = x[0..3]
#  187|     m0_14(int)            = Store                            : r0_11, r0_13
#  187|         ResultMemoryAccess = y[0..3]
#  188|     r0_15(glval<unknown>) = FunctionAddress[sink]            : 
#  188|     r0_16(glval<int>)     = VariableAddress[y]               : 
#  188|     r0_17(int)            = Load                             : r0_16, m0_14
#  188|         OperandMemoryAccess(CopySource) = y[0..3]
#  188|     v0_18(void)           = Call                             : r0_15, r0_17
#  188|     mu0_19(unknown)       = ^CallSideEffect                  : mu0_2
#  188|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  188|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  189|     v0_20(void)           = NoOp                             : 
#  185|     v0_21(void)           = ReturnVoid                       : 
#  185|     v0_22(void)           = UnmodeledUse                     : mu*
#  185|     v0_23(void)           = ExitFunction                     : 

#  191| returnSourceParameter(int) -> int
#  191|   Block 0
#  191|     v0_0(void)           = EnterFunction            : 
#  191|     mu0_1(unknown)       = AliasedDefinition        : 
#  191|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter)
#  191|     mu0_2(unknown)       = UnmodeledDefinition      : 
#  191|     r0_3(glval<int>)     = VariableAddress[s]       : 
#  191|     m0_4(int)            = InitializeParameter[s]   : r0_3
#  191|         ResultMemoryAccess = s[0..3]
#  192|     r0_5(glval<unknown>) = FunctionAddress[sink]    : 
#  192|     r0_6(glval<int>)     = VariableAddress[s]       : 
#  192|     r0_7(int)            = Load                     : r0_6, m0_4
#  192|         OperandMemoryAccess(CopySource) = s[0..3]
#  192|     v0_8(void)           = Call                     : r0_5, r0_7
#  192|     mu0_9(unknown)       = ^CallSideEffect          : mu0_2
#  192|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSourceParameter)
#  192|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter)
#  193|     r0_10(glval<int>)    = VariableAddress[#return] : 
#  193|     r0_11(glval<int>)    = VariableAddress[s]       : 
#  193|     r0_12(int)           = Load                     : r0_11, m0_4
#  193|         OperandMemoryAccess(CopySource) = s[0..3]
#  193|     m0_13(int)           = Store                    : r0_10, r0_12
#  193|         ResultMemoryAccess = #return[0..3]
#  191|     r0_14(glval<int>)    = VariableAddress[#return] : 
#  191|     v0_15(void)          = ReturnValue              : r0_14, m0_13
#  191|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  191|     v0_16(void)          = UnmodeledUse             : mu*
#  191|     v0_17(void)          = ExitFunction             : 

#  196| callReturnSourceParameter() -> void
#  196|   Block 0
#  196|     v0_0(void)            = EnterFunction                          : 
#  196|     mu0_1(unknown)        = AliasedDefinition                      : 
#  196|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  196|     mu0_2(unknown)        = UnmodeledDefinition                    : 
#  197|     r0_3(glval<int>)      = VariableAddress[x]                     : 
#  197|     r0_4(glval<unknown>)  = FunctionAddress[returnSourceParameter] : 
#  197|     r0_5(int)             = Constant[0]                            : 
#  197|     r0_6(int)             = Call                                   : r0_4, r0_5
#  197|     mu0_7(unknown)        = ^CallSideEffect                        : mu0_2
#  197|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  197|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  197|     m0_8(int)             = Store                                  : r0_3, r0_6
#  197|         ResultMemoryAccess = x[0..3]
#  198|     r0_9(glval<unknown>)  = FunctionAddress[sink]                  : 
#  198|     r0_10(glval<int>)     = VariableAddress[x]                     : 
#  198|     r0_11(int)            = Load                                   : r0_10, m0_8
#  198|         OperandMemoryAccess(CopySource) = x[0..3]
#  198|     v0_12(void)           = Call                                   : r0_9, r0_11
#  198|     mu0_13(unknown)       = ^CallSideEffect                        : mu0_2
#  198|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  198|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  199|     r0_14(glval<int>)     = VariableAddress[y]                     : 
#  199|     r0_15(glval<unknown>) = FunctionAddress[returnSourceParameter] : 
#  199|     r0_16(glval<unknown>) = FunctionAddress[source]                : 
#  199|     r0_17(int)            = Call                                   : r0_16
#  199|     mu0_18(unknown)       = ^CallSideEffect                        : mu0_2
#  199|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  199|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  199|     r0_19(int)            = Call                                   : r0_15, r0_17
#  199|     mu0_20(unknown)       = ^CallSideEffect                        : mu0_2
#  199|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  199|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  199|     m0_21(int)            = Store                                  : r0_14, r0_19
#  199|         ResultMemoryAccess = y[0..3]
#  200|     r0_22(glval<unknown>) = FunctionAddress[sink]                  : 
#  200|     r0_23(glval<int>)     = VariableAddress[y]                     : 
#  200|     r0_24(int)            = Load                                   : r0_23, m0_21
#  200|         OperandMemoryAccess(CopySource) = y[0..3]
#  200|     v0_25(void)           = Call                                   : r0_22, r0_24
#  200|     mu0_26(unknown)       = ^CallSideEffect                        : mu0_2
#  200|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  200|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  201|     v0_27(void)           = NoOp                                   : 
#  196|     v0_28(void)           = ReturnVoid                             : 
#  196|     v0_29(void)           = UnmodeledUse                           : mu*
#  196|     v0_30(void)           = ExitFunction                           : 

#  203| returnSourceParameter2(int) -> int
#  203|   Block 0
#  203|     v0_0(void)           = EnterFunction            : 
#  203|     mu0_1(unknown)       = AliasedDefinition        : 
#  203|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter2)
#  203|     mu0_2(unknown)       = UnmodeledDefinition      : 
#  203|     r0_3(glval<int>)     = VariableAddress[s]       : 
#  203|     m0_4(int)            = InitializeParameter[s]   : r0_3
#  203|         ResultMemoryAccess = s[0..3]
#  204|     r0_5(glval<int>)     = VariableAddress[x]       : 
#  204|     r0_6(glval<int>)     = VariableAddress[s]       : 
#  204|     r0_7(int)            = Load                     : r0_6, m0_4
#  204|         OperandMemoryAccess(CopySource) = s[0..3]
#  204|     m0_8(int)            = Store                    : r0_5, r0_7
#  204|         ResultMemoryAccess = x[0..3]
#  205|     r0_9(glval<unknown>) = FunctionAddress[sink]    : 
#  205|     r0_10(glval<int>)    = VariableAddress[x]       : 
#  205|     r0_11(int)           = Load                     : r0_10, m0_8
#  205|         OperandMemoryAccess(CopySource) = x[0..3]
#  205|     v0_12(void)          = Call                     : r0_9, r0_11
#  205|     mu0_13(unknown)      = ^CallSideEffect          : mu0_2
#  205|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSourceParameter2)
#  205|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter2)
#  206|     r0_14(glval<int>)    = VariableAddress[#return] : 
#  206|     r0_15(glval<int>)    = VariableAddress[x]       : 
#  206|     r0_16(int)           = Load                     : r0_15, m0_8
#  206|         OperandMemoryAccess(CopySource) = x[0..3]
#  206|     m0_17(int)           = Store                    : r0_14, r0_16
#  206|         ResultMemoryAccess = #return[0..3]
#  203|     r0_18(glval<int>)    = VariableAddress[#return] : 
#  203|     v0_19(void)          = ReturnValue              : r0_18, m0_17
#  203|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  203|     v0_20(void)          = UnmodeledUse             : mu*
#  203|     v0_21(void)          = ExitFunction             : 

#  209| callReturnSourceParameter2() -> void
#  209|   Block 0
#  209|     v0_0(void)            = EnterFunction                           : 
#  209|     mu0_1(unknown)        = AliasedDefinition                       : 
#  209|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  209|     mu0_2(unknown)        = UnmodeledDefinition                     : 
#  210|     r0_3(glval<int>)      = VariableAddress[x]                      : 
#  210|     r0_4(glval<unknown>)  = FunctionAddress[returnSourceParameter2] : 
#  210|     r0_5(int)             = Constant[0]                             : 
#  210|     r0_6(int)             = Call                                    : r0_4, r0_5
#  210|     mu0_7(unknown)        = ^CallSideEffect                         : mu0_2
#  210|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  210|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  210|     m0_8(int)             = Store                                   : r0_3, r0_6
#  210|         ResultMemoryAccess = x[0..3]
#  211|     r0_9(glval<unknown>)  = FunctionAddress[sink]                   : 
#  211|     r0_10(glval<int>)     = VariableAddress[x]                      : 
#  211|     r0_11(int)            = Load                                    : r0_10, m0_8
#  211|         OperandMemoryAccess(CopySource) = x[0..3]
#  211|     v0_12(void)           = Call                                    : r0_9, r0_11
#  211|     mu0_13(unknown)       = ^CallSideEffect                         : mu0_2
#  211|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  211|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  212|     r0_14(glval<int>)     = VariableAddress[y]                      : 
#  212|     r0_15(glval<unknown>) = FunctionAddress[returnSourceParameter2] : 
#  212|     r0_16(glval<unknown>) = FunctionAddress[source]                 : 
#  212|     r0_17(int)            = Call                                    : r0_16
#  212|     mu0_18(unknown)       = ^CallSideEffect                         : mu0_2
#  212|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  212|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  212|     r0_19(int)            = Call                                    : r0_15, r0_17
#  212|     mu0_20(unknown)       = ^CallSideEffect                         : mu0_2
#  212|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  212|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  212|     m0_21(int)            = Store                                   : r0_14, r0_19
#  212|         ResultMemoryAccess = y[0..3]
#  213|     r0_22(glval<unknown>) = FunctionAddress[sink]                   : 
#  213|     r0_23(glval<int>)     = VariableAddress[y]                      : 
#  213|     r0_24(int)            = Load                                    : r0_23, m0_21
#  213|         OperandMemoryAccess(CopySource) = y[0..3]
#  213|     v0_25(void)           = Call                                    : r0_22, r0_24
#  213|     mu0_26(unknown)       = ^CallSideEffect                         : mu0_2
#  213|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  213|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  214|     v0_27(void)           = NoOp                                    : 
#  209|     v0_28(void)           = ReturnVoid                              : 
#  209|     v0_29(void)           = UnmodeledUse                            : mu*
#  209|     v0_30(void)           = ExitFunction                            : 

#  218| returnSource() -> int
#  218|   Block 0
#  218|     v0_0(void)           = EnterFunction            : 
#  218|     mu0_1(unknown)       = AliasedDefinition        : 
#  218|         ResultMemoryAccess = UnknownVvar(IR: returnSource)
#  218|     mu0_2(unknown)       = UnmodeledDefinition      : 
#  219|     r0_3(glval<int>)     = VariableAddress[x]       : 
#  219|     r0_4(glval<unknown>) = FunctionAddress[source]  : 
#  219|     r0_5(int)            = Call                     : r0_4
#  219|     mu0_6(unknown)       = ^CallSideEffect          : mu0_2
#  219|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSource)
#  219|         ResultMemoryAccess = UnknownVvar(IR: returnSource)
#  219|     m0_7(int)            = Store                    : r0_3, r0_5
#  219|         ResultMemoryAccess = x[0..3]
#  220|     r0_8(glval<int>)     = VariableAddress[#return] : 
#  220|     r0_9(glval<int>)     = VariableAddress[x]       : 
#  220|     r0_10(int)           = Load                     : r0_9, m0_7
#  220|         OperandMemoryAccess(CopySource) = x[0..3]
#  220|     m0_11(int)           = Store                    : r0_8, r0_10
#  220|         ResultMemoryAccess = #return[0..3]
#  218|     r0_12(glval<int>)    = VariableAddress[#return] : 
#  218|     v0_13(void)          = ReturnValue              : r0_12, m0_11
#  218|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  218|     v0_14(void)          = UnmodeledUse             : mu*
#  218|     v0_15(void)          = ExitFunction             : 

#  223| callReturnSource() -> void
#  223|   Block 0
#  223|     v0_0(void)            = EnterFunction                 : 
#  223|     mu0_1(unknown)        = AliasedDefinition             : 
#  223|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  223|     mu0_2(unknown)        = UnmodeledDefinition           : 
#  224|     r0_3(glval<int>)      = VariableAddress[x]            : 
#  224|     r0_4(glval<unknown>)  = FunctionAddress[returnSource] : 
#  224|     r0_5(int)             = Call                          : r0_4
#  224|     mu0_6(unknown)        = ^CallSideEffect               : mu0_2
#  224|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSource)
#  224|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  224|     m0_7(int)             = Store                         : r0_3, r0_5
#  224|         ResultMemoryAccess = x[0..3]
#  225|     r0_8(glval<int>)      = VariableAddress[y]            : 
#  225|     r0_9(glval<int>)      = VariableAddress[x]            : 
#  225|     r0_10(int)            = Load                          : r0_9, m0_7
#  225|         OperandMemoryAccess(CopySource) = x[0..3]
#  225|     m0_11(int)            = Store                         : r0_8, r0_10
#  225|         ResultMemoryAccess = y[0..3]
#  226|     r0_12(glval<unknown>) = FunctionAddress[sink]         : 
#  226|     r0_13(glval<int>)     = VariableAddress[y]            : 
#  226|     r0_14(int)            = Load                          : r0_13, m0_11
#  226|         OperandMemoryAccess(CopySource) = y[0..3]
#  226|     v0_15(void)           = Call                          : r0_12, r0_14
#  226|     mu0_16(unknown)       = ^CallSideEffect               : mu0_2
#  226|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSource)
#  226|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  227|     v0_17(void)           = NoOp                          : 
#  223|     v0_18(void)           = ReturnVoid                    : 
#  223|     v0_19(void)           = UnmodeledUse                  : mu*
#  223|     v0_20(void)           = ExitFunction                  : 

#  237| BarrierTests::returnParameter(int) -> int
#  237|   Block 0
#  237|     v0_0(void)                = EnterFunction            : 
#  237|     mu0_1(unknown)            = AliasedDefinition        : 
#  237|         ResultMemoryAccess = UnknownVvar(IR: returnParameter)
#  237|     mu0_2(unknown)            = UnmodeledDefinition      : 
#  237|     r0_3(glval<BarrierTests>) = InitializeThis           : 
#  237|     r0_4(glval<int>)          = VariableAddress[p]       : 
#  237|     m0_5(int)                 = InitializeParameter[p]   : r0_4
#  237|         ResultMemoryAccess = p[0..3]
#  238|     r0_6(glval<int>)          = VariableAddress[#return] : 
#  238|     r0_7(glval<int>)          = VariableAddress[p]       : 
#  238|     r0_8(int)                 = Load                     : r0_7, m0_5
#  238|         OperandMemoryAccess(CopySource) = p[0..3]
#  238|     m0_9(int)                 = Store                    : r0_6, r0_8
#  238|         ResultMemoryAccess = #return[0..3]
#  237|     r0_10(glval<int>)         = VariableAddress[#return] : 
#  237|     v0_11(void)               = ReturnValue              : r0_10, m0_9
#  237|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  237|     v0_12(void)               = UnmodeledUse             : mu*
#  237|     v0_13(void)               = ExitFunction             : 

#  241| BarrierTests::callReturnParameter() -> void
#  241|   Block 0
#  241|     v0_0(void)                = EnterFunction                    : 
#  241|     mu0_1(unknown)            = AliasedDefinition                : 
#  241|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  241|     mu0_2(unknown)            = UnmodeledDefinition              : 
#  241|     r0_3(glval<BarrierTests>) = InitializeThis                   : 
#  242|     r0_4(glval<int>)          = VariableAddress[x]               : 
#-----|     r0_5(BarrierTests *)      = CopyValue                        : r0_3
#  242|     r0_6(glval<unknown>)      = FunctionAddress[returnParameter] : 
#  242|     r0_7(glval<unknown>)      = FunctionAddress[source]          : 
#  242|     r0_8(int)                 = Call                             : r0_7
#  242|     mu0_9(unknown)            = ^CallSideEffect                  : mu0_2
#  242|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  242|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  242|     r0_10(int)                = Call                             : r0_6, this:r0_5, r0_8
#  242|     mu0_11(unknown)           = ^CallSideEffect                  : mu0_2
#  242|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  242|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  242|     m0_12(int)                = Store                            : r0_4, r0_10
#  242|         ResultMemoryAccess = x[0..3]
#  243|     r0_13(glval<int>)         = VariableAddress[barrier]         : 
#  243|     r0_14(glval<int>)         = VariableAddress[x]               : 
#  243|     r0_15(int)                = Load                             : r0_14, m0_12
#  243|         OperandMemoryAccess(CopySource) = x[0..3]
#  243|     m0_16(int)                = Store                            : r0_13, r0_15
#  243|         ResultMemoryAccess = barrier[0..3]
#  244|     r0_17(glval<int>)         = VariableAddress[y]               : 
#  244|     r0_18(glval<int>)         = VariableAddress[barrier]         : 
#  244|     r0_19(int)                = Load                             : r0_18, m0_16
#  244|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  244|     m0_20(int)                = Store                            : r0_17, r0_19
#  244|         ResultMemoryAccess = y[0..3]
#  245|     r0_21(glval<unknown>)     = FunctionAddress[sink]            : 
#  245|     r0_22(glval<int>)         = VariableAddress[y]               : 
#  245|     r0_23(int)                = Load                             : r0_22, m0_20
#  245|         OperandMemoryAccess(CopySource) = y[0..3]
#  245|     v0_24(void)               = Call                             : r0_21, r0_23
#  245|     mu0_25(unknown)           = ^CallSideEffect                  : mu0_2
#  245|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnParameter)
#  245|         ResultMemoryAccess = UnknownVvar(IR: callReturnParameter)
#  246|     v0_26(void)               = NoOp                             : 
#  241|     v0_27(void)               = ReturnVoid                       : 
#  241|     v0_28(void)               = UnmodeledUse                     : mu*
#  241|     v0_29(void)               = ExitFunction                     : 

#  248| BarrierTests::returnSourceParameter(int) -> int
#  248|   Block 0
#  248|     v0_0(void)                = EnterFunction               : 
#  248|     mu0_1(unknown)            = AliasedDefinition           : 
#  248|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter)
#  248|     mu0_2(unknown)            = UnmodeledDefinition         : 
#  248|     r0_3(glval<BarrierTests>) = InitializeThis              : 
#  248|     r0_4(glval<int>)          = VariableAddress[source]     : 
#  248|     m0_5(int)                 = InitializeParameter[source] : r0_4
#  248|         ResultMemoryAccess = source[0..3]
#  249|     r0_6(glval<int>)          = VariableAddress[barrier]    : 
#  249|     r0_7(glval<int>)          = VariableAddress[source]     : 
#  249|     r0_8(int)                 = Load                        : r0_7, m0_5
#  249|         OperandMemoryAccess(CopySource) = source[0..3]
#  249|     m0_9(int)                 = Store                       : r0_6, r0_8
#  249|         ResultMemoryAccess = barrier[0..3]
#  250|     r0_10(glval<unknown>)     = FunctionAddress[sink]       : 
#  250|     r0_11(glval<int>)         = VariableAddress[barrier]    : 
#  250|     r0_12(int)                = Load                        : r0_11, m0_9
#  250|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  250|     v0_13(void)               = Call                        : r0_10, r0_12
#  250|     mu0_14(unknown)           = ^CallSideEffect             : mu0_2
#  250|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSourceParameter)
#  250|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter)
#  251|     r0_15(glval<int>)         = VariableAddress[#return]    : 
#  251|     r0_16(glval<int>)         = VariableAddress[barrier]    : 
#  251|     r0_17(int)                = Load                        : r0_16, m0_9
#  251|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  251|     m0_18(int)                = Store                       : r0_15, r0_17
#  251|         ResultMemoryAccess = #return[0..3]
#  248|     r0_19(glval<int>)         = VariableAddress[#return]    : 
#  248|     v0_20(void)               = ReturnValue                 : r0_19, m0_18
#  248|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  248|     v0_21(void)               = UnmodeledUse                : mu*
#  248|     v0_22(void)               = ExitFunction                : 

#  254| BarrierTests::callReturnSourceParameter() -> void
#  254|   Block 0
#  254|     v0_0(void)                = EnterFunction                          : 
#  254|     mu0_1(unknown)            = AliasedDefinition                      : 
#  254|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  254|     mu0_2(unknown)            = UnmodeledDefinition                    : 
#  254|     r0_3(glval<BarrierTests>) = InitializeThis                         : 
#  255|     r0_4(glval<int>)          = VariableAddress[x]                     : 
#-----|     r0_5(BarrierTests *)      = CopyValue                              : r0_3
#  255|     r0_6(glval<unknown>)      = FunctionAddress[returnSourceParameter] : 
#  255|     r0_7(int)                 = Constant[0]                            : 
#  255|     r0_8(int)                 = Call                                   : r0_6, this:r0_5, r0_7
#  255|     mu0_9(unknown)            = ^CallSideEffect                        : mu0_2
#  255|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  255|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  255|     m0_10(int)                = Store                                  : r0_4, r0_8
#  255|         ResultMemoryAccess = x[0..3]
#  256|     r0_11(glval<unknown>)     = FunctionAddress[sink]                  : 
#  256|     r0_12(glval<int>)         = VariableAddress[x]                     : 
#  256|     r0_13(int)                = Load                                   : r0_12, m0_10
#  256|         OperandMemoryAccess(CopySource) = x[0..3]
#  256|     v0_14(void)               = Call                                   : r0_11, r0_13
#  256|     mu0_15(unknown)           = ^CallSideEffect                        : mu0_2
#  256|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  256|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  257|     r0_16(glval<int>)         = VariableAddress[y]                     : 
#-----|     r0_17(BarrierTests *)     = CopyValue                              : r0_3
#  257|     r0_18(glval<unknown>)     = FunctionAddress[returnSourceParameter] : 
#  257|     r0_19(glval<unknown>)     = FunctionAddress[source]                : 
#  257|     r0_20(int)                = Call                                   : r0_19
#  257|     mu0_21(unknown)           = ^CallSideEffect                        : mu0_2
#  257|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  257|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  257|     r0_22(int)                = Call                                   : r0_18, this:r0_17, r0_20
#  257|     mu0_23(unknown)           = ^CallSideEffect                        : mu0_2
#  257|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  257|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  257|     m0_24(int)                = Store                                  : r0_16, r0_22
#  257|         ResultMemoryAccess = y[0..3]
#  258|     r0_25(glval<unknown>)     = FunctionAddress[sink]                  : 
#  258|     r0_26(glval<int>)         = VariableAddress[y]                     : 
#  258|     r0_27(int)                = Load                                   : r0_26, m0_24
#  258|         OperandMemoryAccess(CopySource) = y[0..3]
#  258|     v0_28(void)               = Call                                   : r0_25, r0_27
#  258|     mu0_29(unknown)           = ^CallSideEffect                        : mu0_2
#  258|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter)
#  258|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter)
#  259|     v0_30(void)               = NoOp                                   : 
#  254|     v0_31(void)               = ReturnVoid                             : 
#  254|     v0_32(void)               = UnmodeledUse                           : mu*
#  254|     v0_33(void)               = ExitFunction                           : 

#  261| BarrierTests::returnSourceParameter2(int) -> int
#  261|   Block 0
#  261|     v0_0(void)                = EnterFunction               : 
#  261|     mu0_1(unknown)            = AliasedDefinition           : 
#  261|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter2)
#  261|     mu0_2(unknown)            = UnmodeledDefinition         : 
#  261|     r0_3(glval<BarrierTests>) = InitializeThis              : 
#  261|     r0_4(glval<int>)          = VariableAddress[source]     : 
#  261|     m0_5(int)                 = InitializeParameter[source] : r0_4
#  261|         ResultMemoryAccess = source[0..3]
#  262|     r0_6(glval<int>)          = VariableAddress[barrier]    : 
#  262|     r0_7(glval<int>)          = VariableAddress[source]     : 
#  262|     r0_8(int)                 = Load                        : r0_7, m0_5
#  262|         OperandMemoryAccess(CopySource) = source[0..3]
#  262|     m0_9(int)                 = Store                       : r0_6, r0_8
#  262|         ResultMemoryAccess = barrier[0..3]
#  263|     r0_10(glval<int>)         = VariableAddress[x]          : 
#  263|     r0_11(glval<int>)         = VariableAddress[barrier]    : 
#  263|     r0_12(int)                = Load                        : r0_11, m0_9
#  263|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  263|     m0_13(int)                = Store                       : r0_10, r0_12
#  263|         ResultMemoryAccess = x[0..3]
#  264|     r0_14(glval<unknown>)     = FunctionAddress[sink]       : 
#  264|     r0_15(glval<int>)         = VariableAddress[x]          : 
#  264|     r0_16(int)                = Load                        : r0_15, m0_13
#  264|         OperandMemoryAccess(CopySource) = x[0..3]
#  264|     v0_17(void)               = Call                        : r0_14, r0_16
#  264|     mu0_18(unknown)           = ^CallSideEffect             : mu0_2
#  264|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSourceParameter2)
#  264|         ResultMemoryAccess = UnknownVvar(IR: returnSourceParameter2)
#  265|     r0_19(glval<int>)         = VariableAddress[#return]    : 
#  265|     r0_20(glval<int>)         = VariableAddress[x]          : 
#  265|     r0_21(int)                = Load                        : r0_20, m0_13
#  265|         OperandMemoryAccess(CopySource) = x[0..3]
#  265|     m0_22(int)                = Store                       : r0_19, r0_21
#  265|         ResultMemoryAccess = #return[0..3]
#  261|     r0_23(glval<int>)         = VariableAddress[#return]    : 
#  261|     v0_24(void)               = ReturnValue                 : r0_23, m0_22
#  261|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  261|     v0_25(void)               = UnmodeledUse                : mu*
#  261|     v0_26(void)               = ExitFunction                : 

#  268| BarrierTests::callReturnSourceParameter2() -> void
#  268|   Block 0
#  268|     v0_0(void)                = EnterFunction                           : 
#  268|     mu0_1(unknown)            = AliasedDefinition                       : 
#  268|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  268|     mu0_2(unknown)            = UnmodeledDefinition                     : 
#  268|     r0_3(glval<BarrierTests>) = InitializeThis                          : 
#  269|     r0_4(glval<int>)          = VariableAddress[x]                      : 
#-----|     r0_5(BarrierTests *)      = CopyValue                               : r0_3
#  269|     r0_6(glval<unknown>)      = FunctionAddress[returnSourceParameter2] : 
#  269|     r0_7(int)                 = Constant[0]                             : 
#  269|     r0_8(int)                 = Call                                    : r0_6, this:r0_5, r0_7
#  269|     mu0_9(unknown)            = ^CallSideEffect                         : mu0_2
#  269|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  269|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  269|     m0_10(int)                = Store                                   : r0_4, r0_8
#  269|         ResultMemoryAccess = x[0..3]
#  270|     r0_11(glval<unknown>)     = FunctionAddress[sink]                   : 
#  270|     r0_12(glval<int>)         = VariableAddress[x]                      : 
#  270|     r0_13(int)                = Load                                    : r0_12, m0_10
#  270|         OperandMemoryAccess(CopySource) = x[0..3]
#  270|     v0_14(void)               = Call                                    : r0_11, r0_13
#  270|     mu0_15(unknown)           = ^CallSideEffect                         : mu0_2
#  270|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  270|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  271|     r0_16(glval<int>)         = VariableAddress[y]                      : 
#-----|     r0_17(BarrierTests *)     = CopyValue                               : r0_3
#  271|     r0_18(glval<unknown>)     = FunctionAddress[returnSourceParameter2] : 
#  271|     r0_19(glval<unknown>)     = FunctionAddress[source]                 : 
#  271|     r0_20(int)                = Call                                    : r0_19
#  271|     mu0_21(unknown)           = ^CallSideEffect                         : mu0_2
#  271|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  271|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  271|     r0_22(int)                = Call                                    : r0_18, this:r0_17, r0_20
#  271|     mu0_23(unknown)           = ^CallSideEffect                         : mu0_2
#  271|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  271|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  271|     m0_24(int)                = Store                                   : r0_16, r0_22
#  271|         ResultMemoryAccess = y[0..3]
#  272|     r0_25(glval<unknown>)     = FunctionAddress[sink]                   : 
#  272|     r0_26(glval<int>)         = VariableAddress[y]                      : 
#  272|     r0_27(int)                = Load                                    : r0_26, m0_24
#  272|         OperandMemoryAccess(CopySource) = y[0..3]
#  272|     v0_28(void)               = Call                                    : r0_25, r0_27
#  272|     mu0_29(unknown)           = ^CallSideEffect                         : mu0_2
#  272|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSourceParameter2)
#  272|         ResultMemoryAccess = UnknownVvar(IR: callReturnSourceParameter2)
#  273|     v0_30(void)               = NoOp                                    : 
#  268|     v0_31(void)               = ReturnVoid                              : 
#  268|     v0_32(void)               = UnmodeledUse                            : mu*
#  268|     v0_33(void)               = ExitFunction                            : 

#  277| BarrierTests::returnSource() -> int
#  277|   Block 0
#  277|     v0_0(void)                = EnterFunction            : 
#  277|     mu0_1(unknown)            = AliasedDefinition        : 
#  277|         ResultMemoryAccess = UnknownVvar(IR: returnSource)
#  277|     mu0_2(unknown)            = UnmodeledDefinition      : 
#  277|     r0_3(glval<BarrierTests>) = InitializeThis           : 
#  278|     r0_4(glval<int>)          = VariableAddress[x]       : 
#  278|     r0_5(glval<unknown>)      = FunctionAddress[source]  : 
#  278|     r0_6(int)                 = Call                     : r0_5
#  278|     mu0_7(unknown)            = ^CallSideEffect          : mu0_2
#  278|         OperandMemoryAccess(Operand) = UnknownVvar(IR: returnSource)
#  278|         ResultMemoryAccess = UnknownVvar(IR: returnSource)
#  278|     m0_8(int)                 = Store                    : r0_4, r0_6
#  278|         ResultMemoryAccess = x[0..3]
#  279|     r0_9(glval<int>)          = VariableAddress[barrier] : 
#  279|     r0_10(glval<int>)         = VariableAddress[x]       : 
#  279|     r0_11(int)                = Load                     : r0_10, m0_8
#  279|         OperandMemoryAccess(CopySource) = x[0..3]
#  279|     m0_12(int)                = Store                    : r0_9, r0_11
#  279|         ResultMemoryAccess = barrier[0..3]
#  280|     r0_13(glval<int>)         = VariableAddress[#return] : 
#  280|     r0_14(glval<int>)         = VariableAddress[barrier] : 
#  280|     r0_15(int)                = Load                     : r0_14, m0_12
#  280|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  280|     m0_16(int)                = Store                    : r0_13, r0_15
#  280|         ResultMemoryAccess = #return[0..3]
#  277|     r0_17(glval<int>)         = VariableAddress[#return] : 
#  277|     v0_18(void)               = ReturnValue              : r0_17, m0_16
#  277|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  277|     v0_19(void)               = UnmodeledUse             : mu*
#  277|     v0_20(void)               = ExitFunction             : 

#  283| BarrierTests::callReturnSource() -> void
#  283|   Block 0
#  283|     v0_0(void)                = EnterFunction                 : 
#  283|     mu0_1(unknown)            = AliasedDefinition             : 
#  283|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  283|     mu0_2(unknown)            = UnmodeledDefinition           : 
#  283|     r0_3(glval<BarrierTests>) = InitializeThis                : 
#  284|     r0_4(glval<int>)          = VariableAddress[x]            : 
#-----|     r0_5(BarrierTests *)      = CopyValue                     : r0_3
#  284|     r0_6(glval<unknown>)      = FunctionAddress[returnSource] : 
#  284|     r0_7(int)                 = Call                          : r0_6, this:r0_5
#  284|     mu0_8(unknown)            = ^CallSideEffect               : mu0_2
#  284|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSource)
#  284|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  284|     m0_9(int)                 = Store                         : r0_4, r0_7
#  284|         ResultMemoryAccess = x[0..3]
#  285|     r0_10(glval<int>)         = VariableAddress[y]            : 
#  285|     r0_11(glval<int>)         = VariableAddress[x]            : 
#  285|     r0_12(int)                = Load                          : r0_11, m0_9
#  285|         OperandMemoryAccess(CopySource) = x[0..3]
#  285|     m0_13(int)                = Store                         : r0_10, r0_12
#  285|         ResultMemoryAccess = y[0..3]
#  286|     r0_14(glval<unknown>)     = FunctionAddress[sink]         : 
#  286|     r0_15(glval<int>)         = VariableAddress[y]            : 
#  286|     r0_16(int)                = Load                          : r0_15, m0_13
#  286|         OperandMemoryAccess(CopySource) = y[0..3]
#  286|     v0_17(void)               = Call                          : r0_14, r0_16
#  286|     mu0_18(unknown)           = ^CallSideEffect               : mu0_2
#  286|         OperandMemoryAccess(Operand) = UnknownVvar(IR: callReturnSource)
#  286|         ResultMemoryAccess = UnknownVvar(IR: callReturnSource)
#  287|     v0_19(void)               = NoOp                          : 
#  283|     v0_20(void)               = ReturnVoid                    : 
#  283|     v0_21(void)               = UnmodeledUse                  : mu*
#  283|     v0_22(void)               = ExitFunction                  : 

#  292| NestedTests::FlowIntoParameter::level0() -> void
#  292|   Block 0
#  292|     v0_0(void)                     = EnterFunction               : 
#  292|     mu0_1(unknown)                 = AliasedDefinition           : 
#  292|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  292|     mu0_2(unknown)                 = UnmodeledDefinition         : 
#  292|     r0_3(glval<FlowIntoParameter>) = InitializeThis              : 
#-----|     r0_4(FlowIntoParameter *)      = CopyValue                   : r0_3
#  293|     r0_5(glval<unknown>)           = FunctionAddress[level1]     : 
#  293|     r0_6(glval<unknown>)           = FunctionAddress[source]     : 
#  293|     r0_7(int)                      = Call                        : r0_6
#  293|     mu0_8(unknown)                 = ^CallSideEffect             : mu0_2
#  293|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  293|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  293|     v0_9(void)                     = Call                        : r0_5, this:r0_4, r0_7
#  293|     mu0_10(unknown)                = ^CallSideEffect             : mu0_2
#  293|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  293|         ResultMemoryAccess = UnknownVvar(IR: level0)
#-----|     r0_11(FlowIntoParameter *)     = CopyValue                   : r0_3
#  294|     r0_12(glval<unknown>)          = FunctionAddress[safelevel1] : 
#  294|     r0_13(glval<unknown>)          = FunctionAddress[source]     : 
#  294|     r0_14(int)                     = Call                        : r0_13
#  294|     mu0_15(unknown)                = ^CallSideEffect             : mu0_2
#  294|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  294|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  294|     v0_16(void)                    = Call                        : r0_12, this:r0_11, r0_14
#  294|     mu0_17(unknown)                = ^CallSideEffect             : mu0_2
#  294|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  294|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  295|     v0_18(void)                    = NoOp                        : 
#  292|     v0_19(void)                    = ReturnVoid                  : 
#  292|     v0_20(void)                    = UnmodeledUse                : mu*
#  292|     v0_21(void)                    = ExitFunction                : 

#  297| NestedTests::FlowIntoParameter::level1(int) -> void
#  297|   Block 0
#  297|     v0_0(void)                     = EnterFunction           : 
#  297|     mu0_1(unknown)                 = AliasedDefinition       : 
#  297|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  297|     mu0_2(unknown)                 = UnmodeledDefinition     : 
#  297|     r0_3(glval<FlowIntoParameter>) = InitializeThis          : 
#  297|     r0_4(glval<int>)               = VariableAddress[x]      : 
#  297|     m0_5(int)                      = InitializeParameter[x]  : r0_4
#  297|         ResultMemoryAccess = x[0..3]
#  298|     r0_6(glval<int>)               = VariableAddress[y]      : 
#  298|     r0_7(glval<int>)               = VariableAddress[x]      : 
#  298|     r0_8(int)                      = Load                    : r0_7, m0_5
#  298|         OperandMemoryAccess(CopySource) = x[0..3]
#  298|     m0_9(int)                      = Store                   : r0_6, r0_8
#  298|         ResultMemoryAccess = y[0..3]
#-----|     r0_10(FlowIntoParameter *)     = CopyValue               : r0_3
#  299|     r0_11(glval<unknown>)          = FunctionAddress[level2] : 
#  299|     r0_12(glval<int>)              = VariableAddress[y]      : 
#  299|     r0_13(int)                     = Load                    : r0_12, m0_9
#  299|         OperandMemoryAccess(CopySource) = y[0..3]
#  299|     v0_14(void)                    = Call                    : r0_11, this:r0_10, r0_13
#  299|     mu0_15(unknown)                = ^CallSideEffect         : mu0_2
#  299|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level1)
#  299|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  300|     v0_16(void)                    = NoOp                    : 
#  297|     v0_17(void)                    = ReturnVoid              : 
#  297|     v0_18(void)                    = UnmodeledUse            : mu*
#  297|     v0_19(void)                    = ExitFunction            : 

#  302| NestedTests::FlowIntoParameter::safelevel1(int) -> void
#  302|   Block 0
#  302|     v0_0(void)                     = EnterFunction            : 
#  302|     mu0_1(unknown)                 = AliasedDefinition        : 
#  302|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  302|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  302|     r0_3(glval<FlowIntoParameter>) = InitializeThis           : 
#  302|     r0_4(glval<int>)               = VariableAddress[x]       : 
#  302|     m0_5(int)                      = InitializeParameter[x]   : r0_4
#  302|         ResultMemoryAccess = x[0..3]
#  303|     r0_6(glval<int>)               = VariableAddress[barrier] : 
#  303|     r0_7(glval<int>)               = VariableAddress[x]       : 
#  303|     r0_8(int)                      = Load                     : r0_7, m0_5
#  303|         OperandMemoryAccess(CopySource) = x[0..3]
#  303|     m0_9(int)                      = Store                    : r0_6, r0_8
#  303|         ResultMemoryAccess = barrier[0..3]
#-----|     r0_10(FlowIntoParameter *)     = CopyValue                : r0_3
#  304|     r0_11(glval<unknown>)          = FunctionAddress[level2]  : 
#  304|     r0_12(glval<int>)              = VariableAddress[barrier] : 
#  304|     r0_13(int)                     = Load                     : r0_12, m0_9
#  304|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  304|     v0_14(void)                    = Call                     : r0_11, this:r0_10, r0_13
#  304|     mu0_15(unknown)                = ^CallSideEffect          : mu0_2
#  304|         OperandMemoryAccess(Operand) = UnknownVvar(IR: safelevel1)
#  304|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  305|     v0_16(void)                    = NoOp                     : 
#  302|     v0_17(void)                    = ReturnVoid               : 
#  302|     v0_18(void)                    = UnmodeledUse             : mu*
#  302|     v0_19(void)                    = ExitFunction             : 

#  307| NestedTests::FlowIntoParameter::level2(int) -> void
#  307|   Block 0
#  307|     v0_0(void)                     = EnterFunction          : 
#  307|     mu0_1(unknown)                 = AliasedDefinition      : 
#  307|         ResultMemoryAccess = UnknownVvar(IR: level2)
#  307|     mu0_2(unknown)                 = UnmodeledDefinition    : 
#  307|     r0_3(glval<FlowIntoParameter>) = InitializeThis         : 
#  307|     r0_4(glval<int>)               = VariableAddress[x]     : 
#  307|     m0_5(int)                      = InitializeParameter[x] : r0_4
#  307|         ResultMemoryAccess = x[0..3]
#  308|     r0_6(glval<unknown>)           = FunctionAddress[sink]  : 
#  308|     r0_7(glval<int>)               = VariableAddress[x]     : 
#  308|     r0_8(int)                      = Load                   : r0_7, m0_5
#  308|         OperandMemoryAccess(CopySource) = x[0..3]
#  308|     v0_9(void)                     = Call                   : r0_6, r0_8
#  308|     mu0_10(unknown)                = ^CallSideEffect        : mu0_2
#  308|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level2)
#  308|         ResultMemoryAccess = UnknownVvar(IR: level2)
#  309|     v0_11(void)                    = NoOp                   : 
#  307|     v0_12(void)                    = ReturnVoid             : 
#  307|     v0_13(void)                    = UnmodeledUse           : mu*
#  307|     v0_14(void)                    = ExitFunction           : 

#  312| NestedTests::FlowThroughFunctionReturn::level0() -> void
#  312|   Block 0
#  312|     v0_0(void)                             = EnterFunction               : 
#  312|     mu0_1(unknown)                         = AliasedDefinition           : 
#  312|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  312|     mu0_2(unknown)                         = UnmodeledDefinition         : 
#  312|     r0_3(glval<FlowThroughFunctionReturn>) = InitializeThis              : 
#  313|     r0_4(glval<int>)                       = VariableAddress[x]          : 
#-----|     r0_5(FlowThroughFunctionReturn *)      = CopyValue                   : r0_3
#  313|     r0_6(glval<unknown>)                   = FunctionAddress[level1]     : 
#  313|     r0_7(glval<unknown>)                   = FunctionAddress[source]     : 
#  313|     r0_8(int)                              = Call                        : r0_7
#  313|     mu0_9(unknown)                         = ^CallSideEffect             : mu0_2
#  313|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  313|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  313|     r0_10(int)                             = Call                        : r0_6, this:r0_5, r0_8
#  313|     mu0_11(unknown)                        = ^CallSideEffect             : mu0_2
#  313|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  313|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  313|     m0_12(int)                             = Store                       : r0_4, r0_10
#  313|         ResultMemoryAccess = x[0..3]
#  314|     r0_13(glval<unknown>)                  = FunctionAddress[sink]       : 
#  314|     r0_14(glval<int>)                      = VariableAddress[x]          : 
#  314|     r0_15(int)                             = Load                        : r0_14, m0_12
#  314|         OperandMemoryAccess(CopySource) = x[0..3]
#  314|     v0_16(void)                            = Call                        : r0_13, r0_15
#  314|     mu0_17(unknown)                        = ^CallSideEffect             : mu0_2
#  314|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  314|         ResultMemoryAccess = UnknownVvar(IR: level0)
#-----|     r0_18(FlowThroughFunctionReturn *)     = CopyValue                   : r0_3
#  315|     r0_19(glval<unknown>)                  = FunctionAddress[safelevel1] : 
#  315|     r0_20(glval<unknown>)                  = FunctionAddress[source]     : 
#  315|     r0_21(int)                             = Call                        : r0_20
#  315|     mu0_22(unknown)                        = ^CallSideEffect             : mu0_2
#  315|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  315|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  315|     r0_23(int)                             = Call                        : r0_19, this:r0_18, r0_21
#  315|     mu0_24(unknown)                        = ^CallSideEffect             : mu0_2
#  315|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  315|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  315|     r0_25(glval<int>)                      = VariableAddress[x]          : 
#  315|     m0_26(int)                             = Store                       : r0_25, r0_23
#  315|         ResultMemoryAccess = x[0..3]
#  316|     r0_27(glval<unknown>)                  = FunctionAddress[sink]       : 
#  316|     r0_28(glval<int>)                      = VariableAddress[x]          : 
#  316|     r0_29(int)                             = Load                        : r0_28, m0_26
#  316|         OperandMemoryAccess(CopySource) = x[0..3]
#  316|     v0_30(void)                            = Call                        : r0_27, r0_29
#  316|     mu0_31(unknown)                        = ^CallSideEffect             : mu0_2
#  316|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  316|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  317|     v0_32(void)                            = NoOp                        : 
#  312|     v0_33(void)                            = ReturnVoid                  : 
#  312|     v0_34(void)                            = UnmodeledUse                : mu*
#  312|     v0_35(void)                            = ExitFunction                : 

#  319| NestedTests::FlowThroughFunctionReturn::level1(int) -> int
#  319|   Block 0
#  319|     v0_0(void)                             = EnterFunction            : 
#  319|     mu0_1(unknown)                         = AliasedDefinition        : 
#  319|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  319|     mu0_2(unknown)                         = UnmodeledDefinition      : 
#  319|     r0_3(glval<FlowThroughFunctionReturn>) = InitializeThis           : 
#  319|     r0_4(glval<int>)                       = VariableAddress[x]       : 
#  319|     m0_5(int)                              = InitializeParameter[x]   : r0_4
#  319|         ResultMemoryAccess = x[0..3]
#  320|     r0_6(glval<int>)                       = VariableAddress[y]       : 
#  320|     r0_7(glval<int>)                       = VariableAddress[x]       : 
#  320|     r0_8(int)                              = Load                     : r0_7, m0_5
#  320|         OperandMemoryAccess(CopySource) = x[0..3]
#  320|     m0_9(int)                              = Store                    : r0_6, r0_8
#  320|         ResultMemoryAccess = y[0..3]
#  321|     r0_10(glval<int>)                      = VariableAddress[#return] : 
#-----|     r0_11(FlowThroughFunctionReturn *)     = CopyValue                : r0_3
#  321|     r0_12(glval<unknown>)                  = FunctionAddress[level2]  : 
#  321|     r0_13(glval<int>)                      = VariableAddress[y]       : 
#  321|     r0_14(int)                             = Load                     : r0_13, m0_9
#  321|         OperandMemoryAccess(CopySource) = y[0..3]
#  321|     r0_15(int)                             = Call                     : r0_12, this:r0_11, r0_14
#  321|     mu0_16(unknown)                        = ^CallSideEffect          : mu0_2
#  321|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level1)
#  321|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  321|     m0_17(int)                             = Store                    : r0_10, r0_15
#  321|         ResultMemoryAccess = #return[0..3]
#  319|     r0_18(glval<int>)                      = VariableAddress[#return] : 
#  319|     v0_19(void)                            = ReturnValue              : r0_18, m0_17
#  319|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  319|     v0_20(void)                            = UnmodeledUse             : mu*
#  319|     v0_21(void)                            = ExitFunction             : 

#  324| NestedTests::FlowThroughFunctionReturn::safelevel1(int) -> int
#  324|   Block 0
#  324|     v0_0(void)                             = EnterFunction            : 
#  324|     mu0_1(unknown)                         = AliasedDefinition        : 
#  324|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  324|     mu0_2(unknown)                         = UnmodeledDefinition      : 
#  324|     r0_3(glval<FlowThroughFunctionReturn>) = InitializeThis           : 
#  324|     r0_4(glval<int>)                       = VariableAddress[x]       : 
#  324|     m0_5(int)                              = InitializeParameter[x]   : r0_4
#  324|         ResultMemoryAccess = x[0..3]
#  325|     r0_6(glval<int>)                       = VariableAddress[barrier] : 
#  325|     r0_7(glval<int>)                       = VariableAddress[x]       : 
#  325|     r0_8(int)                              = Load                     : r0_7, m0_5
#  325|         OperandMemoryAccess(CopySource) = x[0..3]
#  325|     m0_9(int)                              = Store                    : r0_6, r0_8
#  325|         ResultMemoryAccess = barrier[0..3]
#  326|     r0_10(glval<int>)                      = VariableAddress[#return] : 
#-----|     r0_11(FlowThroughFunctionReturn *)     = CopyValue                : r0_3
#  326|     r0_12(glval<unknown>)                  = FunctionAddress[level2]  : 
#  326|     r0_13(glval<int>)                      = VariableAddress[barrier] : 
#  326|     r0_14(int)                             = Load                     : r0_13, m0_9
#  326|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  326|     r0_15(int)                             = Call                     : r0_12, this:r0_11, r0_14
#  326|     mu0_16(unknown)                        = ^CallSideEffect          : mu0_2
#  326|         OperandMemoryAccess(Operand) = UnknownVvar(IR: safelevel1)
#  326|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  326|     m0_17(int)                             = Store                    : r0_10, r0_15
#  326|         ResultMemoryAccess = #return[0..3]
#  324|     r0_18(glval<int>)                      = VariableAddress[#return] : 
#  324|     v0_19(void)                            = ReturnValue              : r0_18, m0_17
#  324|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  324|     v0_20(void)                            = UnmodeledUse             : mu*
#  324|     v0_21(void)                            = ExitFunction             : 

#  329| NestedTests::FlowThroughFunctionReturn::level2(int) -> int
#  329|   Block 0
#  329|     v0_0(void)                             = EnterFunction            : 
#  329|     mu0_1(unknown)                         = AliasedDefinition        : 
#  329|         ResultMemoryAccess = UnknownVvar(IR: level2)
#  329|     mu0_2(unknown)                         = UnmodeledDefinition      : 
#  329|     r0_3(glval<FlowThroughFunctionReturn>) = InitializeThis           : 
#  329|     r0_4(glval<int>)                       = VariableAddress[x]       : 
#  329|     m0_5(int)                              = InitializeParameter[x]   : r0_4
#  329|         ResultMemoryAccess = x[0..3]
#  330|     r0_6(glval<int>)                       = VariableAddress[y]       : 
#  330|     r0_7(glval<int>)                       = VariableAddress[x]       : 
#  330|     r0_8(int)                              = Load                     : r0_7, m0_5
#  330|         OperandMemoryAccess(CopySource) = x[0..3]
#  330|     m0_9(int)                              = Store                    : r0_6, r0_8
#  330|         ResultMemoryAccess = y[0..3]
#  331|     r0_10(glval<int>)                      = VariableAddress[#return] : 
#  331|     r0_11(glval<int>)                      = VariableAddress[y]       : 
#  331|     r0_12(int)                             = Load                     : r0_11, m0_9
#  331|         OperandMemoryAccess(CopySource) = y[0..3]
#  331|     m0_13(int)                             = Store                    : r0_10, r0_12
#  331|         ResultMemoryAccess = #return[0..3]
#  329|     r0_14(glval<int>)                      = VariableAddress[#return] : 
#  329|     v0_15(void)                            = ReturnValue              : r0_14, m0_13
#  329|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  329|     v0_16(void)                            = UnmodeledUse             : mu*
#  329|     v0_17(void)                            = ExitFunction             : 

#  335| NestedTests::FlowOutOfFunction::level0() -> void
#  335|   Block 0
#  335|     v0_0(void)                     = EnterFunction               : 
#  335|     mu0_1(unknown)                 = AliasedDefinition           : 
#  335|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  335|     mu0_2(unknown)                 = UnmodeledDefinition         : 
#  335|     r0_3(glval<FlowOutOfFunction>) = InitializeThis              : 
#  336|     r0_4(glval<int>)               = VariableAddress[x]          : 
#-----|     r0_5(FlowOutOfFunction *)      = CopyValue                   : r0_3
#  336|     r0_6(glval<unknown>)           = FunctionAddress[level1]     : 
#  336|     r0_7(int)                      = Call                        : r0_6, this:r0_5
#  336|     mu0_8(unknown)                 = ^CallSideEffect             : mu0_2
#  336|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  336|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  336|     m0_9(int)                      = Store                       : r0_4, r0_7
#  336|         ResultMemoryAccess = x[0..3]
#  337|     r0_10(glval<unknown>)          = FunctionAddress[sink]       : 
#  337|     r0_11(glval<int>)              = VariableAddress[x]          : 
#  337|     r0_12(int)                     = Load                        : r0_11, m0_9
#  337|         OperandMemoryAccess(CopySource) = x[0..3]
#  337|     v0_13(void)                    = Call                        : r0_10, r0_12
#  337|     mu0_14(unknown)                = ^CallSideEffect             : mu0_2
#  337|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  337|         ResultMemoryAccess = UnknownVvar(IR: level0)
#-----|     r0_15(FlowOutOfFunction *)     = CopyValue                   : r0_3
#  338|     r0_16(glval<unknown>)          = FunctionAddress[safelevel1] : 
#  338|     r0_17(int)                     = Call                        : r0_16, this:r0_15
#  338|     mu0_18(unknown)                = ^CallSideEffect             : mu0_2
#  338|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  338|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  338|     r0_19(glval<int>)              = VariableAddress[x]          : 
#  338|     m0_20(int)                     = Store                       : r0_19, r0_17
#  338|         ResultMemoryAccess = x[0..3]
#  339|     r0_21(glval<unknown>)          = FunctionAddress[sink]       : 
#  339|     r0_22(glval<int>)              = VariableAddress[x]          : 
#  339|     r0_23(int)                     = Load                        : r0_22, m0_20
#  339|         OperandMemoryAccess(CopySource) = x[0..3]
#  339|     v0_24(void)                    = Call                        : r0_21, r0_23
#  339|     mu0_25(unknown)                = ^CallSideEffect             : mu0_2
#  339|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level0)
#  339|         ResultMemoryAccess = UnknownVvar(IR: level0)
#  340|     v0_26(void)                    = NoOp                        : 
#  335|     v0_27(void)                    = ReturnVoid                  : 
#  335|     v0_28(void)                    = UnmodeledUse                : mu*
#  335|     v0_29(void)                    = ExitFunction                : 

#  342| NestedTests::FlowOutOfFunction::level1() -> int
#  342|   Block 0
#  342|     v0_0(void)                     = EnterFunction            : 
#  342|     mu0_1(unknown)                 = AliasedDefinition        : 
#  342|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  342|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  342|     r0_3(glval<FlowOutOfFunction>) = InitializeThis           : 
#  343|     r0_4(glval<int>)               = VariableAddress[y]       : 
#-----|     r0_5(FlowOutOfFunction *)      = CopyValue                : r0_3
#  343|     r0_6(glval<unknown>)           = FunctionAddress[level2]  : 
#  343|     r0_7(int)                      = Call                     : r0_6, this:r0_5
#  343|     mu0_8(unknown)                 = ^CallSideEffect          : mu0_2
#  343|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level1)
#  343|         ResultMemoryAccess = UnknownVvar(IR: level1)
#  343|     m0_9(int)                      = Store                    : r0_4, r0_7
#  343|         ResultMemoryAccess = y[0..3]
#  344|     r0_10(glval<int>)              = VariableAddress[#return] : 
#  344|     r0_11(glval<int>)              = VariableAddress[y]       : 
#  344|     r0_12(int)                     = Load                     : r0_11, m0_9
#  344|         OperandMemoryAccess(CopySource) = y[0..3]
#  344|     m0_13(int)                     = Store                    : r0_10, r0_12
#  344|         ResultMemoryAccess = #return[0..3]
#  342|     r0_14(glval<int>)              = VariableAddress[#return] : 
#  342|     v0_15(void)                    = ReturnValue              : r0_14, m0_13
#  342|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  342|     v0_16(void)                    = UnmodeledUse             : mu*
#  342|     v0_17(void)                    = ExitFunction             : 

#  347| NestedTests::FlowOutOfFunction::safelevel1() -> int
#  347|   Block 0
#  347|     v0_0(void)                     = EnterFunction            : 
#  347|     mu0_1(unknown)                 = AliasedDefinition        : 
#  347|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  347|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  347|     r0_3(glval<FlowOutOfFunction>) = InitializeThis           : 
#  348|     r0_4(glval<int>)               = VariableAddress[barrier] : 
#-----|     r0_5(FlowOutOfFunction *)      = CopyValue                : r0_3
#  348|     r0_6(glval<unknown>)           = FunctionAddress[level2]  : 
#  348|     r0_7(int)                      = Call                     : r0_6, this:r0_5
#  348|     mu0_8(unknown)                 = ^CallSideEffect          : mu0_2
#  348|         OperandMemoryAccess(Operand) = UnknownVvar(IR: safelevel1)
#  348|         ResultMemoryAccess = UnknownVvar(IR: safelevel1)
#  348|     m0_9(int)                      = Store                    : r0_4, r0_7
#  348|         ResultMemoryAccess = barrier[0..3]
#  349|     r0_10(glval<int>)              = VariableAddress[#return] : 
#  349|     r0_11(glval<int>)              = VariableAddress[barrier] : 
#  349|     r0_12(int)                     = Load                     : r0_11, m0_9
#  349|         OperandMemoryAccess(CopySource) = barrier[0..3]
#  349|     m0_13(int)                     = Store                    : r0_10, r0_12
#  349|         ResultMemoryAccess = #return[0..3]
#  347|     r0_14(glval<int>)              = VariableAddress[#return] : 
#  347|     v0_15(void)                    = ReturnValue              : r0_14, m0_13
#  347|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  347|     v0_16(void)                    = UnmodeledUse             : mu*
#  347|     v0_17(void)                    = ExitFunction             : 

#  352| NestedTests::FlowOutOfFunction::level2() -> int
#  352|   Block 0
#  352|     v0_0(void)                     = EnterFunction            : 
#  352|     mu0_1(unknown)                 = AliasedDefinition        : 
#  352|         ResultMemoryAccess = UnknownVvar(IR: level2)
#  352|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  352|     r0_3(glval<FlowOutOfFunction>) = InitializeThis           : 
#  353|     r0_4(glval<int>)               = VariableAddress[y]       : 
#  353|     r0_5(glval<unknown>)           = FunctionAddress[source]  : 
#  353|     r0_6(int)                      = Call                     : r0_5
#  353|     mu0_7(unknown)                 = ^CallSideEffect          : mu0_2
#  353|         OperandMemoryAccess(Operand) = UnknownVvar(IR: level2)
#  353|         ResultMemoryAccess = UnknownVvar(IR: level2)
#  353|     m0_8(int)                      = Store                    : r0_4, r0_6
#  353|         ResultMemoryAccess = y[0..3]
#  354|     r0_9(glval<int>)               = VariableAddress[#return] : 
#  354|     r0_10(glval<int>)              = VariableAddress[y]       : 
#  354|     r0_11(int)                     = Load                     : r0_10, m0_8
#  354|         OperandMemoryAccess(CopySource) = y[0..3]
#  354|     m0_12(int)                     = Store                    : r0_9, r0_11
#  354|         ResultMemoryAccess = #return[0..3]
#  352|     r0_13(glval<int>)              = VariableAddress[#return] : 
#  352|     v0_14(void)                    = ReturnValue              : r0_13, m0_12
#  352|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  352|     v0_15(void)                    = UnmodeledUse             : mu*
#  352|     v0_16(void)                    = ExitFunction             : 

#  361| NestedTests::FlowOutOfFunction::f() -> void
#  361|   Block 0
#  361|     v0_0(void)                     = EnterFunction           : 
#  361|     mu0_1(unknown)                 = AliasedDefinition       : 
#  361|         ResultMemoryAccess = UnknownVvar(IR: f)
#  361|     mu0_2(unknown)                 = UnmodeledDefinition     : 
#  361|     r0_3(glval<FlowOutOfFunction>) = InitializeThis          : 
#-----|     r0_4(FlowOutOfFunction *)      = CopyValue               : r0_3
#  362|     r0_5(glval<unknown>)           = FunctionAddress[g]      : 
#  362|     r0_6(glval<unknown>)           = FunctionAddress[source] : 
#  362|     r0_7(int)                      = Call                    : r0_6
#  362|     mu0_8(unknown)                 = ^CallSideEffect         : mu0_2
#  362|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  362|         ResultMemoryAccess = UnknownVvar(IR: f)
#  362|     v0_9(void)                     = Call                    : r0_5, this:r0_4, r0_7
#  362|     mu0_10(unknown)                = ^CallSideEffect         : mu0_2
#  362|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  362|         ResultMemoryAccess = UnknownVvar(IR: f)
#  363|     v0_11(void)                    = NoOp                    : 
#  361|     v0_12(void)                    = ReturnVoid              : 
#  361|     v0_13(void)                    = UnmodeledUse            : mu*
#  361|     v0_14(void)                    = ExitFunction            : 

#  364| NestedTests::FlowOutOfFunction::g(int) -> void
#  364|   Block 0
#  364|     v0_0(void)                     = EnterFunction          : 
#  364|     mu0_1(unknown)                 = AliasedDefinition      : 
#  364|         ResultMemoryAccess = UnknownVvar(IR: g)
#  364|     mu0_2(unknown)                 = UnmodeledDefinition    : 
#  364|     r0_3(glval<FlowOutOfFunction>) = InitializeThis         : 
#  364|     r0_4(glval<int>)               = VariableAddress[p]     : 
#  364|     m0_5(int)                      = InitializeParameter[p] : r0_4
#  364|         ResultMemoryAccess = p[0..3]
#  365|     r0_6(glval<int>)               = VariableAddress[x]     : 
#-----|     r0_7(FlowOutOfFunction *)      = CopyValue              : r0_3
#  365|     r0_8(glval<unknown>)           = FunctionAddress[h]     : 
#  365|     r0_9(glval<int>)               = VariableAddress[p]     : 
#  365|     r0_10(int)                     = Load                   : r0_9, m0_5
#  365|         OperandMemoryAccess(CopySource) = p[0..3]
#  365|     r0_11(int)                     = Call                   : r0_8, this:r0_7, r0_10
#  365|     mu0_12(unknown)                = ^CallSideEffect        : mu0_2
#  365|         OperandMemoryAccess(Operand) = UnknownVvar(IR: g)
#  365|         ResultMemoryAccess = UnknownVvar(IR: g)
#  365|     m0_13(int)                     = Store                  : r0_6, r0_11
#  365|         ResultMemoryAccess = x[0..3]
#  366|     r0_14(glval<unknown>)          = FunctionAddress[sink]  : 
#  366|     r0_15(glval<int>)              = VariableAddress[x]     : 
#  366|     r0_16(int)                     = Load                   : r0_15, m0_13
#  366|         OperandMemoryAccess(CopySource) = x[0..3]
#  366|     v0_17(void)                    = Call                   : r0_14, r0_16
#  366|     mu0_18(unknown)                = ^CallSideEffect        : mu0_2
#  366|         OperandMemoryAccess(Operand) = UnknownVvar(IR: g)
#  366|         ResultMemoryAccess = UnknownVvar(IR: g)
#  367|     r0_19(glval<int>)              = VariableAddress[y]     : 
#-----|     r0_20(FlowOutOfFunction *)     = CopyValue              : r0_3
#  367|     r0_21(glval<unknown>)          = FunctionAddress[h]     : 
#  367|     r0_22(int)                     = Constant[0]            : 
#  367|     r0_23(int)                     = Call                   : r0_21, this:r0_20, r0_22
#  367|     mu0_24(unknown)                = ^CallSideEffect        : mu0_2
#  367|         OperandMemoryAccess(Operand) = UnknownVvar(IR: g)
#  367|         ResultMemoryAccess = UnknownVvar(IR: g)
#  367|     m0_25(int)                     = Store                  : r0_19, r0_23
#  367|         ResultMemoryAccess = y[0..3]
#  368|     r0_26(glval<unknown>)          = FunctionAddress[sink]  : 
#  368|     r0_27(glval<int>)              = VariableAddress[y]     : 
#  368|     r0_28(int)                     = Load                   : r0_27, m0_25
#  368|         OperandMemoryAccess(CopySource) = y[0..3]
#  368|     v0_29(void)                    = Call                   : r0_26, r0_28
#  368|     mu0_30(unknown)                = ^CallSideEffect        : mu0_2
#  368|         OperandMemoryAccess(Operand) = UnknownVvar(IR: g)
#  368|         ResultMemoryAccess = UnknownVvar(IR: g)
#-----|     r0_31(FlowOutOfFunction *)     = CopyValue              : r0_3
#  369|     r0_32(glval<unknown>)          = FunctionAddress[f]     : 
#  369|     v0_33(void)                    = Call                   : r0_32, this:r0_31
#  369|     mu0_34(unknown)                = ^CallSideEffect        : mu0_2
#  369|         OperandMemoryAccess(Operand) = UnknownVvar(IR: g)
#  369|         ResultMemoryAccess = UnknownVvar(IR: g)
#  370|     v0_35(void)                    = NoOp                   : 
#  364|     v0_36(void)                    = ReturnVoid             : 
#  364|     v0_37(void)                    = UnmodeledUse           : mu*
#  364|     v0_38(void)                    = ExitFunction           : 

#  371| NestedTests::FlowOutOfFunction::h(int) -> int
#  371|   Block 0
#  371|     v0_0(void)                     = EnterFunction            : 
#  371|     mu0_1(unknown)                 = AliasedDefinition        : 
#  371|         ResultMemoryAccess = UnknownVvar(IR: h)
#  371|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  371|     r0_3(glval<FlowOutOfFunction>) = InitializeThis           : 
#  371|     r0_4(glval<int>)               = VariableAddress[p]       : 
#  371|     m0_5(int)                      = InitializeParameter[p]   : r0_4
#  371|         ResultMemoryAccess = p[0..3]
#  372|     r0_6(glval<int>)               = VariableAddress[#return] : 
#  372|     r0_7(glval<int>)               = VariableAddress[p]       : 
#  372|     r0_8(int)                      = Load                     : r0_7, m0_5
#  372|         OperandMemoryAccess(CopySource) = p[0..3]
#  372|     m0_9(int)                      = Store                    : r0_6, r0_8
#  372|         ResultMemoryAccess = #return[0..3]
#  371|     r0_10(glval<int>)              = VariableAddress[#return] : 
#  371|     v0_11(void)                    = ReturnValue              : r0_10, m0_9
#  371|         OperandMemoryAccess(ReturnValue) = #return[0..3]
#  371|     v0_12(void)                    = UnmodeledUse             : mu*
#  371|     v0_13(void)                    = ExitFunction             : 

#  380| FlowThroughGlobals::taintGlobal() -> int
#  380|   Block 0
#  380|     v0_0(void)           = EnterFunction              : 
#  380|     mu0_1(unknown)       = AliasedDefinition          : 
#  380|         ResultMemoryAccess = UnknownVvar(IR: taintGlobal)
#  380|     mu0_2(unknown)       = UnmodeledDefinition        : 
#  381|     r0_3(glval<unknown>) = FunctionAddress[source]    : 
#  381|     r0_4(int)            = Call                       : r0_3
#  381|     mu0_5(unknown)       = ^CallSideEffect            : mu0_2
#  381|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintGlobal)
#  381|         ResultMemoryAccess = UnknownVvar(IR: taintGlobal)
#  381|     r0_6(glval<int>)     = VariableAddress[globalVar] : 
#  381|     mu0_7(int)           = Store                      : r0_6, r0_4
#  381|         ResultMemoryAccess = globalVar[0..3]
#  382|     v0_8(void)           = NoOp                       : 
#  380|     r0_9(glval<int>)     = VariableAddress[#return]   : 
#  380|     v0_10(void)          = ReturnValue                : r0_9
#  380|     v0_11(void)          = UnmodeledUse               : mu*
#  380|     v0_12(void)          = ExitFunction               : 

#  384| FlowThroughGlobals::f() -> int
#  384|   Block 0
#  384|     v0_0(void)            = EnterFunction                : 
#  384|     mu0_1(unknown)        = AliasedDefinition            : 
#  384|         ResultMemoryAccess = UnknownVvar(IR: f)
#  384|     mu0_2(unknown)        = UnmodeledDefinition          : 
#  385|     r0_3(glval<unknown>)  = FunctionAddress[sink]        : 
#  385|     r0_4(glval<int>)      = VariableAddress[globalVar]   : 
#  385|     r0_5(int)             = Load                         : r0_4, mu0_2
#  385|     v0_6(void)            = Call                         : r0_3, r0_5
#  385|     mu0_7(unknown)        = ^CallSideEffect              : mu0_2
#  385|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  385|         ResultMemoryAccess = UnknownVvar(IR: f)
#  386|     r0_8(glval<unknown>)  = FunctionAddress[taintGlobal] : 
#  386|     r0_9(int)             = Call                         : r0_8
#  386|     mu0_10(unknown)       = ^CallSideEffect              : mu0_2
#  386|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  386|         ResultMemoryAccess = UnknownVvar(IR: f)
#  387|     r0_11(glval<unknown>) = FunctionAddress[sink]        : 
#  387|     r0_12(glval<int>)     = VariableAddress[globalVar]   : 
#  387|     r0_13(int)            = Load                         : r0_12, mu0_2
#  387|     v0_14(void)           = Call                         : r0_11, r0_13
#  387|     mu0_15(unknown)       = ^CallSideEffect              : mu0_2
#  387|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  387|         ResultMemoryAccess = UnknownVvar(IR: f)
#  388|     v0_16(void)           = NoOp                         : 
#  384|     r0_17(glval<int>)     = VariableAddress[#return]     : 
#  384|     v0_18(void)           = ReturnValue                  : r0_17
#  384|     v0_19(void)           = UnmodeledUse                 : mu*
#  384|     v0_20(void)           = ExitFunction                 : 

#  390| FlowThroughGlobals::calledAfterTaint() -> int
#  390|   Block 0
#  390|     v0_0(void)           = EnterFunction              : 
#  390|     mu0_1(unknown)       = AliasedDefinition          : 
#  390|         ResultMemoryAccess = UnknownVvar(IR: calledAfterTaint)
#  390|     mu0_2(unknown)       = UnmodeledDefinition        : 
#  391|     r0_3(glval<unknown>) = FunctionAddress[sink]      : 
#  391|     r0_4(glval<int>)     = VariableAddress[globalVar] : 
#  391|     r0_5(int)            = Load                       : r0_4, mu0_2
#  391|     v0_6(void)           = Call                       : r0_3, r0_5
#  391|     mu0_7(unknown)       = ^CallSideEffect            : mu0_2
#  391|         OperandMemoryAccess(Operand) = UnknownVvar(IR: calledAfterTaint)
#  391|         ResultMemoryAccess = UnknownVvar(IR: calledAfterTaint)
#  392|     v0_8(void)           = NoOp                       : 
#  390|     r0_9(glval<int>)     = VariableAddress[#return]   : 
#  390|     v0_10(void)          = ReturnValue                : r0_9
#  390|     v0_11(void)          = UnmodeledUse               : mu*
#  390|     v0_12(void)          = ExitFunction               : 

#  394| FlowThroughGlobals::taintAndCall() -> int
#  394|   Block 0
#  394|     v0_0(void)            = EnterFunction                     : 
#  394|     mu0_1(unknown)        = AliasedDefinition                 : 
#  394|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  394|     mu0_2(unknown)        = UnmodeledDefinition               : 
#  395|     r0_3(glval<unknown>)  = FunctionAddress[source]           : 
#  395|     r0_4(int)             = Call                              : r0_3
#  395|     mu0_5(unknown)        = ^CallSideEffect                   : mu0_2
#  395|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  395|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  395|     r0_6(glval<int>)      = VariableAddress[globalVar]        : 
#  395|     mu0_7(int)            = Store                             : r0_6, r0_4
#  395|         ResultMemoryAccess = globalVar[0..3]
#  396|     r0_8(glval<unknown>)  = FunctionAddress[calledAfterTaint] : 
#  396|     r0_9(int)             = Call                              : r0_8
#  396|     mu0_10(unknown)       = ^CallSideEffect                   : mu0_2
#  396|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  396|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  397|     r0_11(glval<unknown>) = FunctionAddress[sink]             : 
#  397|     r0_12(glval<int>)     = VariableAddress[globalVar]        : 
#  397|     r0_13(int)            = Load                              : r0_12, mu0_2
#  397|     v0_14(void)           = Call                              : r0_11, r0_13
#  397|     mu0_15(unknown)       = ^CallSideEffect                   : mu0_2
#  397|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  397|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  398|     v0_16(void)           = NoOp                              : 
#  394|     r0_17(glval<int>)     = VariableAddress[#return]          : 
#  394|     v0_18(void)           = ReturnValue                       : r0_17
#  394|     v0_19(void)           = UnmodeledUse                      : mu*
#  394|     v0_20(void)           = ExitFunction                      : 

#  406| FlowThroughFields::taintField() -> int
#  406|   Block 0
#  406|     v0_0(void)                     = EnterFunction            : 
#  406|     mu0_1(unknown)                 = AliasedDefinition        : 
#  406|         ResultMemoryAccess = UnknownVvar(IR: taintField)
#  406|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  406|     r0_3(glval<FlowThroughFields>) = InitializeThis           : 
#  407|     r0_4(glval<unknown>)           = FunctionAddress[source]  : 
#  407|     r0_5(int)                      = Call                     : r0_4
#  407|     mu0_6(unknown)                 = ^CallSideEffect          : mu0_2
#  407|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintField)
#  407|         ResultMemoryAccess = UnknownVvar(IR: taintField)
#-----|     r0_7(FlowThroughFields *)      = CopyValue                : r0_3
#  407|     r0_8(glval<int>)               = FieldAddress[field]      : r0_7
#  407|     mu0_9(int)                     = Store                    : r0_8, r0_5
#  407|         ResultMemoryAccess = UnknownVvar(IR: taintField)
#  408|     v0_10(void)                    = NoOp                     : 
#  406|     r0_11(glval<int>)              = VariableAddress[#return] : 
#  406|     v0_12(void)                    = ReturnValue              : r0_11
#  406|     v0_13(void)                    = UnmodeledUse             : mu*
#  406|     v0_14(void)                    = ExitFunction             : 

#  410| FlowThroughFields::f() -> int
#  410|   Block 0
#  410|     v0_0(void)                     = EnterFunction               : 
#  410|     mu0_1(unknown)                 = AliasedDefinition           : 
#  410|         ResultMemoryAccess = UnknownVvar(IR: f)
#  410|     mu0_2(unknown)                 = UnmodeledDefinition         : 
#  410|     r0_3(glval<FlowThroughFields>) = InitializeThis              : 
#  411|     r0_4(glval<unknown>)           = FunctionAddress[sink]       : 
#-----|     r0_5(FlowThroughFields *)      = CopyValue                   : r0_3
#  411|     r0_6(glval<int>)               = FieldAddress[field]         : r0_5
#  411|     r0_7(int)                      = Load                        : r0_6, mu0_2
#  411|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: f)
#  411|     v0_8(void)                     = Call                        : r0_4, r0_7
#  411|     mu0_9(unknown)                 = ^CallSideEffect             : mu0_2
#  411|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  411|         ResultMemoryAccess = UnknownVvar(IR: f)
#-----|     r0_10(FlowThroughFields *)     = CopyValue                   : r0_3
#  412|     r0_11(glval<unknown>)          = FunctionAddress[taintField] : 
#  412|     r0_12(int)                     = Call                        : r0_11, this:r0_10
#  412|     mu0_13(unknown)                = ^CallSideEffect             : mu0_2
#  412|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  412|         ResultMemoryAccess = UnknownVvar(IR: f)
#  413|     r0_14(glval<unknown>)          = FunctionAddress[sink]       : 
#-----|     r0_15(FlowThroughFields *)     = CopyValue                   : r0_3
#  413|     r0_16(glval<int>)              = FieldAddress[field]         : r0_15
#  413|     r0_17(int)                     = Load                        : r0_16, mu0_2
#  413|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: f)
#  413|     v0_18(void)                    = Call                        : r0_14, r0_17
#  413|     mu0_19(unknown)                = ^CallSideEffect             : mu0_2
#  413|         OperandMemoryAccess(Operand) = UnknownVvar(IR: f)
#  413|         ResultMemoryAccess = UnknownVvar(IR: f)
#  414|     v0_20(void)                    = NoOp                        : 
#  410|     r0_21(glval<int>)              = VariableAddress[#return]    : 
#  410|     v0_22(void)                    = ReturnValue                 : r0_21
#  410|     v0_23(void)                    = UnmodeledUse                : mu*
#  410|     v0_24(void)                    = ExitFunction                : 

#  416| FlowThroughFields::calledAfterTaint() -> int
#  416|   Block 0
#  416|     v0_0(void)                     = EnterFunction            : 
#  416|     mu0_1(unknown)                 = AliasedDefinition        : 
#  416|         ResultMemoryAccess = UnknownVvar(IR: calledAfterTaint)
#  416|     mu0_2(unknown)                 = UnmodeledDefinition      : 
#  416|     r0_3(glval<FlowThroughFields>) = InitializeThis           : 
#  417|     r0_4(glval<unknown>)           = FunctionAddress[sink]    : 
#-----|     r0_5(FlowThroughFields *)      = CopyValue                : r0_3
#  417|     r0_6(glval<int>)               = FieldAddress[field]      : r0_5
#  417|     r0_7(int)                      = Load                     : r0_6, mu0_2
#  417|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: calledAfterTaint)
#  417|     v0_8(void)                     = Call                     : r0_4, r0_7
#  417|     mu0_9(unknown)                 = ^CallSideEffect          : mu0_2
#  417|         OperandMemoryAccess(Operand) = UnknownVvar(IR: calledAfterTaint)
#  417|         ResultMemoryAccess = UnknownVvar(IR: calledAfterTaint)
#  418|     v0_10(void)                    = NoOp                     : 
#  416|     r0_11(glval<int>)              = VariableAddress[#return] : 
#  416|     v0_12(void)                    = ReturnValue              : r0_11
#  416|     v0_13(void)                    = UnmodeledUse             : mu*
#  416|     v0_14(void)                    = ExitFunction             : 

#  420| FlowThroughFields::taintAndCall() -> int
#  420|   Block 0
#  420|     v0_0(void)                     = EnterFunction                     : 
#  420|     mu0_1(unknown)                 = AliasedDefinition                 : 
#  420|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  420|     mu0_2(unknown)                 = UnmodeledDefinition               : 
#  420|     r0_3(glval<FlowThroughFields>) = InitializeThis                    : 
#  421|     r0_4(glval<unknown>)           = FunctionAddress[source]           : 
#  421|     r0_5(int)                      = Call                              : r0_4
#  421|     mu0_6(unknown)                 = ^CallSideEffect                   : mu0_2
#  421|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  421|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#-----|     r0_7(FlowThroughFields *)      = CopyValue                         : r0_3
#  421|     r0_8(glval<int>)               = FieldAddress[field]               : r0_7
#  421|     mu0_9(int)                     = Store                             : r0_8, r0_5
#  421|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#-----|     r0_10(FlowThroughFields *)     = CopyValue                         : r0_3
#  422|     r0_11(glval<unknown>)          = FunctionAddress[calledAfterTaint] : 
#  422|     r0_12(int)                     = Call                              : r0_11, this:r0_10
#  422|     mu0_13(unknown)                = ^CallSideEffect                   : mu0_2
#  422|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  422|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  423|     r0_14(glval<unknown>)          = FunctionAddress[sink]             : 
#-----|     r0_15(FlowThroughFields *)     = CopyValue                         : r0_3
#  423|     r0_16(glval<int>)              = FieldAddress[field]               : r0_15
#  423|     r0_17(int)                     = Load                              : r0_16, mu0_2
#  423|         OperandMemoryAccess(CopySource) = UnknownVvar(IR: taintAndCall)
#  423|     v0_18(void)                    = Call                              : r0_14, r0_17
#  423|     mu0_19(unknown)                = ^CallSideEffect                   : mu0_2
#  423|         OperandMemoryAccess(Operand) = UnknownVvar(IR: taintAndCall)
#  423|         ResultMemoryAccess = UnknownVvar(IR: taintAndCall)
#  424|     v0_20(void)                    = NoOp                              : 
#  420|     r0_21(glval<int>)              = VariableAddress[#return]          : 
#  420|     v0_22(void)                    = ReturnValue                       : r0_21
#  420|     v0_23(void)                    = UnmodeledUse                      : mu*
#  420|     v0_24(void)                    = ExitFunction                      : 

true_upon_entry.cpp:
#    8| test1() -> int
#    8|   Block 0
#    8|     v0_0(void)           = EnterFunction           : 
#    8|     mu0_1(unknown)       = AliasedDefinition       : 
#    8|         ResultMemoryAccess = UnknownVvar(IR: test1)
#    8|     mu0_2(unknown)       = UnmodeledDefinition     : 
#    9|     r0_3(glval<int>)     = VariableAddress[x]      : 
#    9|     r0_4(glval<unknown>) = FunctionAddress[source] : 
#    9|     r0_5(int)            = Call                    : r0_4
#    9|     mu0_6(unknown)       = ^CallSideEffect         : mu0_2
#    9|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test1)
#    9|         ResultMemoryAccess = UnknownVvar(IR: test1)
#    9|     m0_7(int)            = Store                   : r0_3, r0_5
#    9|         ResultMemoryAccess = x[0..3]
#   10|     r0_8(glval<int>)     = VariableAddress[i]      : 
#   10|     r0_9(int)            = Constant[0]             : 
#   10|     m0_10(int)           = Store                   : r0_8, r0_9
#   10|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   10|   Block 1
#   10|     m1_0(int)        = Phi                : from 0:m0_10, from 2:m2_7
#   10|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test1)
#   10|         ResultMemoryAccess = UnknownVvar(IR: test1)
#   10|     m1_1(int)        = Phi                : from 0:m0_7, from 2:m2_2
#   10|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test1)
#   10|         ResultMemoryAccess = UnknownVvar(IR: test1)
#   10|     r1_2(glval<int>) = VariableAddress[i] : 
#   10|     r1_3(int)        = Load               : r1_2, m1_0
#   10|         OperandMemoryAccess(CopySource) = i[0..3]
#   10|     r1_4(int)        = Constant[10]       : 
#   10|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   10|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#   11|   Block 2
#   11|     r2_0(int)        = Constant[0]        : 
#   11|     r2_1(glval<int>) = VariableAddress[x] : 
#   11|     m2_2(int)        = Store              : r2_1, r2_0
#   11|         ResultMemoryAccess = x[0..3]
#   10|     r2_3(glval<int>) = VariableAddress[i] : 
#   10|     r2_4(int)        = Load               : r2_3, m1_0
#   10|         OperandMemoryAccess(CopySource) = i[0..3]
#   10|     r2_5(int)        = Constant[1]        : 
#   10|     r2_6(int)        = Add                : r2_4, r2_5
#   10|     m2_7(int)        = Store              : r2_3, r2_6
#   10|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   13|   Block 3
#   13|     r3_0(glval<unknown>) = FunctionAddress[sink]    : 
#   13|     r3_1(glval<int>)     = VariableAddress[x]       : 
#   13|     r3_2(int)            = Load                     : r3_1, m1_1
#   13|         OperandMemoryAccess(CopySource) = x[0..3]
#   13|     v3_3(void)           = Call                     : r3_0, r3_2
#   13|     mu3_4(unknown)       = ^CallSideEffect          : mu0_2
#   13|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test1)
#   13|         ResultMemoryAccess = UnknownVvar(IR: test1)
#   14|     v3_5(void)           = NoOp                     : 
#    8|     r3_6(glval<int>)     = VariableAddress[#return] : 
#    8|     v3_7(void)           = ReturnValue              : r3_6
#    8|     v3_8(void)           = UnmodeledUse             : mu*
#    8|     v3_9(void)           = ExitFunction             : 

#   16| test2(int) -> int
#   16|   Block 0
#   16|     v0_0(void)           = EnterFunction                   : 
#   16|     mu0_1(unknown)       = AliasedDefinition               : 
#   16|         ResultMemoryAccess = UnknownVvar(IR: test2)
#   16|     mu0_2(unknown)       = UnmodeledDefinition             : 
#   16|     r0_3(glval<int>)     = VariableAddress[iterations]     : 
#   16|     m0_4(int)            = InitializeParameter[iterations] : r0_3
#   16|         ResultMemoryAccess = iterations[0..3]
#   17|     r0_5(glval<int>)     = VariableAddress[x]              : 
#   17|     r0_6(glval<unknown>) = FunctionAddress[source]         : 
#   17|     r0_7(int)            = Call                            : r0_6
#   17|     mu0_8(unknown)       = ^CallSideEffect                 : mu0_2
#   17|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test2)
#   17|         ResultMemoryAccess = UnknownVvar(IR: test2)
#   17|     m0_9(int)            = Store                           : r0_5, r0_7
#   17|         ResultMemoryAccess = x[0..3]
#   18|     r0_10(glval<int>)    = VariableAddress[i]              : 
#   18|     r0_11(int)           = Constant[0]                     : 
#   18|     m0_12(int)           = Store                           : r0_10, r0_11
#   18|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   18|   Block 1
#   18|     m1_0(int)        = Phi                         : from 0:m0_12, from 2:m2_7
#   18|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test2)
#   18|         ResultMemoryAccess = UnknownVvar(IR: test2)
#   18|     m1_1(int)        = Phi                         : from 0:m0_9, from 2:m2_2
#   18|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test2)
#   18|         ResultMemoryAccess = UnknownVvar(IR: test2)
#   18|     r1_2(glval<int>) = VariableAddress[i]          : 
#   18|     r1_3(int)        = Load                        : r1_2, m1_0
#   18|         OperandMemoryAccess(CopySource) = i[0..3]
#   18|     r1_4(glval<int>) = VariableAddress[iterations] : 
#   18|     r1_5(int)        = Load                        : r1_4, m0_4
#   18|         OperandMemoryAccess(CopySource) = iterations[0..3]
#   18|     r1_6(bool)       = CompareLT                   : r1_3, r1_5
#   18|     v1_7(void)       = ConditionalBranch           : r1_6
#-----|   False -> Block 3
#-----|   True -> Block 2

#   19|   Block 2
#   19|     r2_0(int)        = Constant[0]        : 
#   19|     r2_1(glval<int>) = VariableAddress[x] : 
#   19|     m2_2(int)        = Store              : r2_1, r2_0
#   19|         ResultMemoryAccess = x[0..3]
#   18|     r2_3(glval<int>) = VariableAddress[i] : 
#   18|     r2_4(int)        = Load               : r2_3, m1_0
#   18|         OperandMemoryAccess(CopySource) = i[0..3]
#   18|     r2_5(int)        = Constant[1]        : 
#   18|     r2_6(int)        = Add                : r2_4, r2_5
#   18|     m2_7(int)        = Store              : r2_3, r2_6
#   18|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   21|   Block 3
#   21|     r3_0(glval<unknown>) = FunctionAddress[sink]    : 
#   21|     r3_1(glval<int>)     = VariableAddress[x]       : 
#   21|     r3_2(int)            = Load                     : r3_1, m1_1
#   21|         OperandMemoryAccess(CopySource) = x[0..3]
#   21|     v3_3(void)           = Call                     : r3_0, r3_2
#   21|     mu3_4(unknown)       = ^CallSideEffect          : mu0_2
#   21|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test2)
#   21|         ResultMemoryAccess = UnknownVvar(IR: test2)
#   22|     v3_5(void)           = NoOp                     : 
#   16|     r3_6(glval<int>)     = VariableAddress[#return] : 
#   16|     v3_7(void)           = ReturnValue              : r3_6
#   16|     v3_8(void)           = UnmodeledUse             : mu*
#   16|     v3_9(void)           = ExitFunction             : 

#   24| test3() -> int
#   24|   Block 0
#   24|     v0_0(void)       = EnterFunction       : 
#   24|     mu0_1(unknown)   = AliasedDefinition   : 
#   24|         ResultMemoryAccess = UnknownVvar(IR: test3)
#   24|     mu0_2(unknown)   = UnmodeledDefinition : 
#   25|     r0_3(glval<int>) = VariableAddress[x]  : 
#   25|     r0_4(int)        = Constant[0]         : 
#   25|     m0_5(int)        = Store               : r0_3, r0_4
#   25|         ResultMemoryAccess = x[0..3]
#   26|     r0_6(glval<int>) = VariableAddress[i]  : 
#   26|     r0_7(int)        = Constant[0]         : 
#   26|     m0_8(int)        = Store               : r0_6, r0_7
#   26|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   26|   Block 1
#   26|     m1_0(int)        = Phi                : from 0:m0_8, from 2:m2_9
#   26|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test3)
#   26|         ResultMemoryAccess = UnknownVvar(IR: test3)
#   26|     m1_1(int)        = Phi                : from 0:m0_5, from 2:m2_4
#   26|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test3)
#   26|         ResultMemoryAccess = UnknownVvar(IR: test3)
#   26|     r1_2(glval<int>) = VariableAddress[i] : 
#   26|     r1_3(int)        = Load               : r1_2, m1_0
#   26|         OperandMemoryAccess(CopySource) = i[0..3]
#   26|     r1_4(int)        = Constant[10]       : 
#   26|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   26|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#   27|   Block 2
#   27|     r2_0(glval<unknown>) = FunctionAddress[source] : 
#   27|     r2_1(int)            = Call                    : r2_0
#   27|     mu2_2(unknown)       = ^CallSideEffect         : mu0_2
#   27|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test3)
#   27|         ResultMemoryAccess = UnknownVvar(IR: test3)
#   27|     r2_3(glval<int>)     = VariableAddress[x]      : 
#   27|     m2_4(int)            = Store                   : r2_3, r2_1
#   27|         ResultMemoryAccess = x[0..3]
#   26|     r2_5(glval<int>)     = VariableAddress[i]      : 
#   26|     r2_6(int)            = Load                    : r2_5, m1_0
#   26|         OperandMemoryAccess(CopySource) = i[0..3]
#   26|     r2_7(int)            = Constant[1]             : 
#   26|     r2_8(int)            = Add                     : r2_6, r2_7
#   26|     m2_9(int)            = Store                   : r2_5, r2_8
#   26|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   29|   Block 3
#   29|     r3_0(glval<unknown>) = FunctionAddress[sink]    : 
#   29|     r3_1(glval<int>)     = VariableAddress[x]       : 
#   29|     r3_2(int)            = Load                     : r3_1, m1_1
#   29|         OperandMemoryAccess(CopySource) = x[0..3]
#   29|     v3_3(void)           = Call                     : r3_0, r3_2
#   29|     mu3_4(unknown)       = ^CallSideEffect          : mu0_2
#   29|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test3)
#   29|         ResultMemoryAccess = UnknownVvar(IR: test3)
#   30|     v3_5(void)           = NoOp                     : 
#   24|     r3_6(glval<int>)     = VariableAddress[#return] : 
#   24|     v3_7(void)           = ReturnValue              : r3_6
#   24|     v3_8(void)           = UnmodeledUse             : mu*
#   24|     v3_9(void)           = ExitFunction             : 

#   32| test4() -> int
#   32|   Block 0
#   32|     v0_0(void)           = EnterFunction           : 
#   32|     mu0_1(unknown)       = AliasedDefinition       : 
#   32|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   32|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   33|     r0_3(glval<int>)     = VariableAddress[x]      : 
#   33|     r0_4(glval<unknown>) = FunctionAddress[source] : 
#   33|     r0_5(int)            = Call                    : r0_4
#   33|     mu0_6(unknown)       = ^CallSideEffect         : mu0_2
#   33|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test4)
#   33|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   33|     m0_7(int)            = Store                   : r0_3, r0_5
#   33|         ResultMemoryAccess = x[0..3]
#   34|     r0_8(glval<int>)     = VariableAddress[i]      : 
#   34|     r0_9(int)            = Constant[0]             : 
#   34|     m0_10(int)           = Store                   : r0_8, r0_9
#   34|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   34|   Block 1
#   34|     m1_0(int)        = Phi                : from 0:m0_10, from 4:m4_7
#   34|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test4)
#   34|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   34|     m1_1(int)        = Phi                : from 0:m0_7, from 4:m4_2
#   34|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test4)
#   34|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   34|     r1_2(glval<int>) = VariableAddress[i] : 
#   34|     r1_3(int)        = Load               : r1_2, m1_0
#   34|         OperandMemoryAccess(CopySource) = i[0..3]
#   34|     r1_4(int)        = Constant[10]       : 
#   34|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   34|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 5
#-----|   True -> Block 2

#   35|   Block 2
#   35|     r2_0(glval<unknown>) = FunctionAddress[random] : 
#   35|     r2_1(bool)           = Call                    : r2_0
#   35|     mu2_2(unknown)       = ^CallSideEffect         : mu0_2
#   35|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test4)
#   35|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   35|     v2_3(void)           = ConditionalBranch       : r2_1
#-----|   False -> Block 4
#-----|   True -> Block 3

#   36|   Block 3
#   36|     v3_0(void) = NoOp : 
#-----|   Goto -> Block 5

#   37|   Block 4
#   37|     r4_0(int)        = Constant[0]        : 
#   37|     r4_1(glval<int>) = VariableAddress[x] : 
#   37|     m4_2(int)        = Store              : r4_1, r4_0
#   37|         ResultMemoryAccess = x[0..3]
#   34|     r4_3(glval<int>) = VariableAddress[i] : 
#   34|     r4_4(int)        = Load               : r4_3, m1_0
#   34|         OperandMemoryAccess(CopySource) = i[0..3]
#   34|     r4_5(int)        = Constant[1]        : 
#   34|     r4_6(int)        = Add                : r4_4, r4_5
#   34|     m4_7(int)        = Store              : r4_3, r4_6
#   34|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   38|   Block 5
#   38|     v5_0(void)           = NoOp                     : 
#   39|     r5_1(glval<unknown>) = FunctionAddress[sink]    : 
#   39|     r5_2(glval<int>)     = VariableAddress[x]       : 
#   39|     r5_3(int)            = Load                     : r5_2, m1_1
#   39|         OperandMemoryAccess(CopySource) = x[0..3]
#   39|     v5_4(void)           = Call                     : r5_1, r5_3
#   39|     mu5_5(unknown)       = ^CallSideEffect          : mu0_2
#   39|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test4)
#   39|         ResultMemoryAccess = UnknownVvar(IR: test4)
#   40|     v5_6(void)           = NoOp                     : 
#   32|     r5_7(glval<int>)     = VariableAddress[#return] : 
#   32|     v5_8(void)           = ReturnValue              : r5_7
#   32|     v5_9(void)           = UnmodeledUse             : mu*
#   32|     v5_10(void)          = ExitFunction             : 

#   42| test5() -> int
#   42|   Block 0
#   42|     v0_0(void)           = EnterFunction           : 
#   42|     mu0_1(unknown)       = AliasedDefinition       : 
#   42|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   42|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   43|     r0_3(glval<int>)     = VariableAddress[x]      : 
#   43|     r0_4(glval<unknown>) = FunctionAddress[source] : 
#   43|     r0_5(int)            = Call                    : r0_4
#   43|     mu0_6(unknown)       = ^CallSideEffect         : mu0_2
#   43|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test5)
#   43|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   43|     m0_7(int)            = Store                   : r0_3, r0_5
#   43|         ResultMemoryAccess = x[0..3]
#   44|     r0_8(glval<int>)     = VariableAddress[i]      : 
#   44|     r0_9(int)            = Constant[0]             : 
#   44|     m0_10(int)           = Store                   : r0_8, r0_9
#   44|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   44|   Block 1
#   44|     m1_0(int)        = Phi                : from 0:m0_10, from 5:m5_6
#   44|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test5)
#   44|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   44|     m1_1(int)        = Phi                : from 0:m0_7, from 5:m5_0
#   44|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test5)
#   44|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   44|     r1_2(glval<int>) = VariableAddress[i] : 
#   44|     r1_3(int)        = Load               : r1_2, m1_0
#   44|         OperandMemoryAccess(CopySource) = i[0..3]
#   44|     r1_4(int)        = Constant[10]       : 
#   44|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   44|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 6
#-----|   True -> Block 2

#   45|   Block 2
#   45|     r2_0(glval<unknown>) = FunctionAddress[random] : 
#   45|     r2_1(bool)           = Call                    : r2_0
#   45|     mu2_2(unknown)       = ^CallSideEffect         : mu0_2
#   45|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test5)
#   45|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   45|     v2_3(void)           = ConditionalBranch       : r2_1
#-----|   False -> Block 4
#-----|   True -> Block 3

#   46|   Block 3
#   46|     v3_0(void) = NoOp : 
#-----|   Goto -> Block 5

#   47|   Block 4
#   47|     r4_0(int)        = Constant[0]        : 
#   47|     r4_1(glval<int>) = VariableAddress[x] : 
#   47|     m4_2(int)        = Store              : r4_1, r4_0
#   47|         ResultMemoryAccess = x[0..3]
#-----|   Goto -> Block 5

#   44|   Block 5
#   44|     m5_0(int)        = Phi                : from 3:m1_1, from 4:m4_2
#   44|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test5)
#   44|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   44|     v5_1(void)       = NoOp               : 
#   44|     r5_2(glval<int>) = VariableAddress[i] : 
#   44|     r5_3(int)        = Load               : r5_2, m1_0
#   44|         OperandMemoryAccess(CopySource) = i[0..3]
#   44|     r5_4(int)        = Constant[1]        : 
#   44|     r5_5(int)        = Add                : r5_3, r5_4
#   44|     m5_6(int)        = Store              : r5_2, r5_5
#   44|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   49|   Block 6
#   49|     r6_0(glval<unknown>) = FunctionAddress[sink]    : 
#   49|     r6_1(glval<int>)     = VariableAddress[x]       : 
#   49|     r6_2(int)            = Load                     : r6_1, m1_1
#   49|         OperandMemoryAccess(CopySource) = x[0..3]
#   49|     v6_3(void)           = Call                     : r6_0, r6_2
#   49|     mu6_4(unknown)       = ^CallSideEffect          : mu0_2
#   49|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test5)
#   49|         ResultMemoryAccess = UnknownVvar(IR: test5)
#   50|     v6_5(void)           = NoOp                     : 
#   42|     r6_6(glval<int>)     = VariableAddress[#return] : 
#   42|     v6_7(void)           = ReturnValue              : r6_6
#   42|     v6_8(void)           = UnmodeledUse             : mu*
#   42|     v6_9(void)           = ExitFunction             : 

#   52| test6() -> int
#   52|   Block 0
#   52|     v0_0(void)           = EnterFunction           : 
#   52|     mu0_1(unknown)       = AliasedDefinition       : 
#   52|         ResultMemoryAccess = UnknownVvar(IR: test6)
#   52|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   53|     r0_3(glval<int>)     = VariableAddress[y]      : 
#   53|     m0_4(int)            = Uninitialized[y]        : r0_3
#   53|         ResultMemoryAccess = y[0..3]
#   54|     r0_5(glval<int>)     = VariableAddress[x]      : 
#   54|     r0_6(glval<unknown>) = FunctionAddress[source] : 
#   54|     r0_7(int)            = Call                    : r0_6
#   54|     mu0_8(unknown)       = ^CallSideEffect         : mu0_2
#   54|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test6)
#   54|         ResultMemoryAccess = UnknownVvar(IR: test6)
#   54|     m0_9(int)            = Store                   : r0_5, r0_7
#   54|         ResultMemoryAccess = x[0..3]
#   55|     r0_10(glval<int>)    = VariableAddress[i]      : 
#   55|     r0_11(int)           = Constant[0]             : 
#   55|     m0_12(int)           = Store                   : r0_10, r0_11
#   55|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   55|   Block 1
#   55|     m1_0(int)        = Phi                : from 0:m0_12, from 3:m3_5
#   55|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test6)
#   55|         ResultMemoryAccess = UnknownVvar(IR: test6)
#   55|     r1_1(glval<int>) = VariableAddress[i] : 
#   55|     r1_2(int)        = Load               : r1_1, m1_0
#   55|         OperandMemoryAccess(CopySource) = i[0..3]
#   55|     r1_3(int)        = Constant[10]       : 
#   55|     r1_4(bool)       = CompareLT          : r1_2, r1_3
#   55|     v1_5(void)       = ConditionalBranch  : r1_4
#-----|   False -> Block 4
#-----|   True -> Block 2

#   55|   Block 2
#   55|     r2_0(int)        = Constant[1]        : 
#   55|     r2_1(glval<int>) = VariableAddress[y] : 
#   55|     m2_2(int)        = Store              : r2_1, r2_0
#   55|         ResultMemoryAccess = y[0..3]
#   55|     r2_3(int)        = Constant[0]        : 
#   55|     r2_4(bool)       = CompareNE          : r2_0, r2_3
#   55|     v2_5(void)       = ConditionalBranch  : r2_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#   55|   Block 3
#   55|     v3_0(void)       = NoOp               : 
#   55|     r3_1(glval<int>) = VariableAddress[i] : 
#   55|     r3_2(int)        = Load               : r3_1, m1_0
#   55|         OperandMemoryAccess(CopySource) = i[0..3]
#   55|     r3_3(int)        = Constant[1]        : 
#   55|     r3_4(int)        = Add                : r3_2, r3_3
#   55|     m3_5(int)        = Store              : r3_1, r3_4
#   55|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   57|   Block 4
#   57|     r4_0(glval<unknown>) = FunctionAddress[sink]    : 
#   57|     r4_1(glval<int>)     = VariableAddress[x]       : 
#   57|     r4_2(int)            = Load                     : r4_1, m0_9
#   57|         OperandMemoryAccess(CopySource) = x[0..3]
#   57|     v4_3(void)           = Call                     : r4_0, r4_2
#   57|     mu4_4(unknown)       = ^CallSideEffect          : mu0_2
#   57|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test6)
#   57|         ResultMemoryAccess = UnknownVvar(IR: test6)
#   58|     v4_5(void)           = NoOp                     : 
#   52|     r4_6(glval<int>)     = VariableAddress[#return] : 
#   52|     v4_7(void)           = ReturnValue              : r4_6
#   52|     v4_8(void)           = UnmodeledUse             : mu*
#   52|     v4_9(void)           = ExitFunction             : 

#   60| test7() -> int
#   60|   Block 0
#   60|     v0_0(void)           = EnterFunction           : 
#   60|     mu0_1(unknown)       = AliasedDefinition       : 
#   60|         ResultMemoryAccess = UnknownVvar(IR: test7)
#   60|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   61|     r0_3(glval<int>)     = VariableAddress[y]      : 
#   61|     m0_4(int)            = Uninitialized[y]        : r0_3
#   61|         ResultMemoryAccess = y[0..3]
#   62|     r0_5(glval<int>)     = VariableAddress[x]      : 
#   62|     r0_6(glval<unknown>) = FunctionAddress[source] : 
#   62|     r0_7(int)            = Call                    : r0_6
#   62|     mu0_8(unknown)       = ^CallSideEffect         : mu0_2
#   62|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test7)
#   62|         ResultMemoryAccess = UnknownVvar(IR: test7)
#   62|     m0_9(int)            = Store                   : r0_5, r0_7
#   62|         ResultMemoryAccess = x[0..3]
#   63|     r0_10(glval<int>)    = VariableAddress[i]      : 
#   63|     r0_11(int)           = Constant[0]             : 
#   63|     m0_12(int)           = Store                   : r0_10, r0_11
#   63|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   63|   Block 1
#   63|     m1_0(int)        = Phi                : from 0:m0_12, from 3:m3_7
#   63|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test7)
#   63|         ResultMemoryAccess = UnknownVvar(IR: test7)
#   63|     m1_1(int)        = Phi                : from 0:m0_9, from 3:m3_2
#   63|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test7)
#   63|         ResultMemoryAccess = UnknownVvar(IR: test7)
#   63|     r1_2(glval<int>) = VariableAddress[i] : 
#   63|     r1_3(int)        = Load               : r1_2, m1_0
#   63|         OperandMemoryAccess(CopySource) = i[0..3]
#   63|     r1_4(int)        = Constant[10]       : 
#   63|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   63|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 4
#-----|   True -> Block 2

#   63|   Block 2
#   63|     r2_0(int)        = Constant[1]        : 
#   63|     r2_1(glval<int>) = VariableAddress[y] : 
#   63|     m2_2(int)        = Store              : r2_1, r2_0
#   63|         ResultMemoryAccess = y[0..3]
#   63|     r2_3(int)        = Constant[0]        : 
#   63|     r2_4(bool)       = CompareNE          : r2_0, r2_3
#   63|     v2_5(void)       = ConditionalBranch  : r2_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#   64|   Block 3
#   64|     r3_0(int)        = Constant[0]        : 
#   64|     r3_1(glval<int>) = VariableAddress[x] : 
#   64|     m3_2(int)        = Store              : r3_1, r3_0
#   64|         ResultMemoryAccess = x[0..3]
#   63|     r3_3(glval<int>) = VariableAddress[i] : 
#   63|     r3_4(int)        = Load               : r3_3, m1_0
#   63|         OperandMemoryAccess(CopySource) = i[0..3]
#   63|     r3_5(int)        = Constant[1]        : 
#   63|     r3_6(int)        = Add                : r3_4, r3_5
#   63|     m3_7(int)        = Store              : r3_3, r3_6
#   63|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   66|   Block 4
#   66|     r4_0(glval<unknown>) = FunctionAddress[sink]    : 
#   66|     r4_1(glval<int>)     = VariableAddress[x]       : 
#   66|     r4_2(int)            = Load                     : r4_1, m1_1
#   66|         OperandMemoryAccess(CopySource) = x[0..3]
#   66|     v4_3(void)           = Call                     : r4_0, r4_2
#   66|     mu4_4(unknown)       = ^CallSideEffect          : mu0_2
#   66|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test7)
#   66|         ResultMemoryAccess = UnknownVvar(IR: test7)
#   67|     v4_5(void)           = NoOp                     : 
#   60|     r4_6(glval<int>)     = VariableAddress[#return] : 
#   60|     v4_7(void)           = ReturnValue              : r4_6
#   60|     v4_8(void)           = UnmodeledUse             : mu*
#   60|     v4_9(void)           = ExitFunction             : 

#   69| test8() -> int
#   69|   Block 0
#   69|     v0_0(void)           = EnterFunction           : 
#   69|     mu0_1(unknown)       = AliasedDefinition       : 
#   69|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   69|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   70|     r0_3(glval<int>)     = VariableAddress[x]      : 
#   70|     r0_4(glval<unknown>) = FunctionAddress[source] : 
#   70|     r0_5(int)            = Call                    : r0_4
#   70|     mu0_6(unknown)       = ^CallSideEffect         : mu0_2
#   70|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test8)
#   70|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   70|     m0_7(int)            = Store                   : r0_3, r0_5
#   70|         ResultMemoryAccess = x[0..3]
#   76|     r0_8(glval<int>)     = VariableAddress[i]      : 
#   76|     r0_9(int)            = Constant[0]             : 
#   76|     m0_10(int)           = Store                   : r0_8, r0_9
#   76|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   76|   Block 1
#   76|     m1_0(int)        = Phi                : from 0:m0_10, from 3:m3_5
#   76|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test8)
#   76|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   76|     m1_1(int)        = Phi                : from 0:m0_7, from 3:m2_2
#   76|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test8)
#   76|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   76|     r1_2(glval<int>) = VariableAddress[i] : 
#   76|     r1_3(int)        = Load               : r1_2, m1_0
#   76|         OperandMemoryAccess(CopySource) = i[0..3]
#   76|     r1_4(int)        = Constant[10]       : 
#   76|     r1_5(bool)       = CompareLT          : r1_3, r1_4
#   76|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 4
#-----|   True -> Block 2

#   76|   Block 2
#   76|     r2_0(int)        = Constant[1]        : 
#   76|     r2_1(glval<int>) = VariableAddress[x] : 
#   76|     m2_2(int)        = Store              : r2_1, r2_0
#   76|         ResultMemoryAccess = x[0..3]
#   76|     r2_3(int)        = Constant[0]        : 
#   76|     r2_4(bool)       = CompareNE          : r2_0, r2_3
#   76|     v2_5(void)       = ConditionalBranch  : r2_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#   76|   Block 3
#   76|     v3_0(void)       = NoOp               : 
#   76|     r3_1(glval<int>) = VariableAddress[i] : 
#   76|     r3_2(int)        = Load               : r3_1, m1_0
#   76|         OperandMemoryAccess(CopySource) = i[0..3]
#   76|     r3_3(int)        = Constant[1]        : 
#   76|     r3_4(int)        = Add                : r3_2, r3_3
#   76|     m3_5(int)        = Store              : r3_1, r3_4
#   76|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   78|   Block 4
#   78|     m4_0(int)            = Phi                      : from 1:m1_1, from 2:m2_2
#   78|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test8)
#   78|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   78|     r4_1(glval<unknown>) = FunctionAddress[sink]    : 
#   78|     r4_2(glval<int>)     = VariableAddress[x]       : 
#   78|     r4_3(int)            = Load                     : r4_2, m4_0
#   78|         OperandMemoryAccess(CopySource) = x[0..3]
#   78|     v4_4(void)           = Call                     : r4_1, r4_3
#   78|     mu4_5(unknown)       = ^CallSideEffect          : mu0_2
#   78|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test8)
#   78|         ResultMemoryAccess = UnknownVvar(IR: test8)
#   79|     v4_6(void)           = NoOp                     : 
#   69|     r4_7(glval<int>)     = VariableAddress[#return] : 
#   69|     v4_8(void)           = ReturnValue              : r4_7
#   69|     v4_9(void)           = UnmodeledUse             : mu*
#   69|     v4_10(void)          = ExitFunction             : 

#   81| test9() -> int
#   81|   Block 0
#   81|     v0_0(void)           = EnterFunction           : 
#   81|     mu0_1(unknown)       = AliasedDefinition       : 
#   81|         ResultMemoryAccess = UnknownVvar(IR: test9)
#   81|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   82|     r0_3(glval<int>)     = VariableAddress[y]      : 
#   82|     m0_4(int)            = Uninitialized[y]        : r0_3
#   82|         ResultMemoryAccess = y[0..3]
#   83|     r0_5(glval<int>)     = VariableAddress[x]      : 
#   83|     r0_6(glval<unknown>) = FunctionAddress[source] : 
#   83|     r0_7(int)            = Call                    : r0_6
#   83|     mu0_8(unknown)       = ^CallSideEffect         : mu0_2
#   83|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test9)
#   83|         ResultMemoryAccess = UnknownVvar(IR: test9)
#   83|     m0_9(int)            = Store                   : r0_5, r0_7
#   83|         ResultMemoryAccess = x[0..3]
#   84|     r0_10(glval<int>)    = VariableAddress[i]      : 
#   84|     r0_11(int)           = Constant[0]             : 
#   84|     m0_12(int)           = Store                   : r0_10, r0_11
#   84|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   84|   Block 1
#   84|     m1_0(int)        = Phi                : from 0:m0_12, from 3:m3_5
#   84|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test9)
#   84|         ResultMemoryAccess = UnknownVvar(IR: test9)
#   84|     r1_1(int)        = Constant[1]        : 
#   84|     r1_2(glval<int>) = VariableAddress[y] : 
#   84|     m1_3(int)        = Store              : r1_2, r1_1
#   84|         ResultMemoryAccess = y[0..3]
#   84|     r1_4(int)        = Constant[0]        : 
#   84|     r1_5(bool)       = CompareNE          : r1_1, r1_4
#   84|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 4
#-----|   True -> Block 2

#   84|   Block 2
#   84|     r2_0(glval<int>) = VariableAddress[i] : 
#   84|     r2_1(int)        = Load               : r2_0, m1_0
#   84|         OperandMemoryAccess(CopySource) = i[0..3]
#   84|     r2_2(int)        = Constant[10]       : 
#   84|     r2_3(bool)       = CompareLT          : r2_1, r2_2
#   84|     v2_4(void)       = ConditionalBranch  : r2_3
#-----|   False -> Block 4
#-----|   True -> Block 3

#   84|   Block 3
#   84|     v3_0(void)       = NoOp               : 
#   84|     r3_1(glval<int>) = VariableAddress[i] : 
#   84|     r3_2(int)        = Load               : r3_1, m1_0
#   84|         OperandMemoryAccess(CopySource) = i[0..3]
#   84|     r3_3(int)        = Constant[1]        : 
#   84|     r3_4(int)        = Add                : r3_2, r3_3
#   84|     m3_5(int)        = Store              : r3_1, r3_4
#   84|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   86|   Block 4
#   86|     r4_0(glval<unknown>) = FunctionAddress[sink]    : 
#   86|     r4_1(glval<int>)     = VariableAddress[x]       : 
#   86|     r4_2(int)            = Load                     : r4_1, m0_9
#   86|         OperandMemoryAccess(CopySource) = x[0..3]
#   86|     v4_3(void)           = Call                     : r4_0, r4_2
#   86|     mu4_4(unknown)       = ^CallSideEffect          : mu0_2
#   86|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test9)
#   86|         ResultMemoryAccess = UnknownVvar(IR: test9)
#   87|     v4_5(void)           = NoOp                     : 
#   81|     r4_6(glval<int>)     = VariableAddress[#return] : 
#   81|     v4_7(void)           = ReturnValue              : r4_6
#   81|     v4_8(void)           = UnmodeledUse             : mu*
#   81|     v4_9(void)           = ExitFunction             : 

#   89| test10() -> int
#   89|   Block 0
#   89|     v0_0(void)           = EnterFunction           : 
#   89|     mu0_1(unknown)       = AliasedDefinition       : 
#   89|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   89|     mu0_2(unknown)       = UnmodeledDefinition     : 
#   90|     r0_3(glval<int>)     = VariableAddress[x]      : 
#   90|     r0_4(glval<unknown>) = FunctionAddress[source] : 
#   90|     r0_5(int)            = Call                    : r0_4
#   90|     mu0_6(unknown)       = ^CallSideEffect         : mu0_2
#   90|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test10)
#   90|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   90|     m0_7(int)            = Store                   : r0_3, r0_5
#   90|         ResultMemoryAccess = x[0..3]
#   91|     r0_8(glval<int>)     = VariableAddress[i]      : 
#   91|     r0_9(int)            = Constant[0]             : 
#   91|     m0_10(int)           = Store                   : r0_8, r0_9
#   91|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   91|   Block 1
#   91|     m1_0(int)        = Phi                : from 0:m0_10, from 3:m3_5
#   91|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test10)
#   91|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   91|     r1_1(int)        = Constant[1]        : 
#   91|     r1_2(glval<int>) = VariableAddress[x] : 
#   91|     m1_3(int)        = Store              : r1_2, r1_1
#   91|         ResultMemoryAccess = x[0..3]
#   91|     r1_4(int)        = Constant[0]        : 
#   91|     r1_5(bool)       = CompareNE          : r1_1, r1_4
#   91|     v1_6(void)       = ConditionalBranch  : r1_5
#-----|   False -> Block 4
#-----|   True -> Block 2

#   91|   Block 2
#   91|     r2_0(glval<int>) = VariableAddress[i] : 
#   91|     r2_1(int)        = Load               : r2_0, m1_0
#   91|         OperandMemoryAccess(CopySource) = i[0..3]
#   91|     r2_2(int)        = Constant[10]       : 
#   91|     r2_3(bool)       = CompareLT          : r2_1, r2_2
#   91|     v2_4(void)       = ConditionalBranch  : r2_3
#-----|   False -> Block 4
#-----|   True -> Block 3

#   91|   Block 3
#   91|     v3_0(void)       = NoOp               : 
#   91|     r3_1(glval<int>) = VariableAddress[i] : 
#   91|     r3_2(int)        = Load               : r3_1, m1_0
#   91|         OperandMemoryAccess(CopySource) = i[0..3]
#   91|     r3_3(int)        = Constant[1]        : 
#   91|     r3_4(int)        = Add                : r3_2, r3_3
#   91|     m3_5(int)        = Store              : r3_1, r3_4
#   91|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 1

#   93|   Block 4
#   93|     r4_0(glval<unknown>) = FunctionAddress[sink]    : 
#   93|     r4_1(glval<int>)     = VariableAddress[x]       : 
#   93|     r4_2(int)            = Load                     : r4_1, m1_3
#   93|         OperandMemoryAccess(CopySource) = x[0..3]
#   93|     v4_3(void)           = Call                     : r4_0, r4_2
#   93|     mu4_4(unknown)       = ^CallSideEffect          : mu0_2
#   93|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test10)
#   93|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   94|     v4_5(void)           = NoOp                     : 
#   89|     r4_6(glval<int>)     = VariableAddress[#return] : 
#   89|     v4_7(void)           = ReturnValue              : r4_6
#   89|     v4_8(void)           = UnmodeledUse             : mu*
#   89|     v4_9(void)           = ExitFunction             : 

#   96| test10(int, int) -> int
#   96|   Block 0
#   96|     v0_0(void)            = EnterFunction           : 
#   96|     mu0_1(unknown)        = AliasedDefinition       : 
#   96|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   96|     mu0_2(unknown)        = UnmodeledDefinition     : 
#   96|     r0_3(glval<int>)      = VariableAddress[b]      : 
#   96|     m0_4(int)             = InitializeParameter[b]  : r0_3
#   96|         ResultMemoryAccess = b[0..3]
#   96|     r0_5(glval<int>)      = VariableAddress[d]      : 
#   96|     m0_6(int)             = InitializeParameter[d]  : r0_5
#   96|         ResultMemoryAccess = d[0..3]
#   97|     r0_7(glval<int>)      = VariableAddress[i]      : 
#   97|     r0_8(int)             = Constant[0]             : 
#   97|     m0_9(int)             = Store                   : r0_7, r0_8
#   97|         ResultMemoryAccess = i[0..3]
#   98|     r0_10(glval<int>)     = VariableAddress[x]      : 
#   98|     r0_11(glval<unknown>) = FunctionAddress[source] : 
#   98|     r0_12(int)            = Call                    : r0_11
#   98|     mu0_13(unknown)       = ^CallSideEffect         : mu0_2
#   98|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test10)
#   98|         ResultMemoryAccess = UnknownVvar(IR: test10)
#   98|     m0_14(int)            = Store                   : r0_10, r0_12
#   98|         ResultMemoryAccess = x[0..3]
#   99|     r0_15(glval<int>)     = VariableAddress[b]      : 
#   99|     r0_16(int)            = Load                    : r0_15, m0_4
#   99|         OperandMemoryAccess(CopySource) = b[0..3]
#   99|     r0_17(int)            = Constant[0]             : 
#   99|     r0_18(bool)           = CompareNE               : r0_16, r0_17
#   99|     v0_19(void)           = ConditionalBranch       : r0_18
#-----|   False -> Block 2
#-----|   True -> Block 1

#  100|   Block 1
#  100|     v1_0(void) = NoOp : 
#-----|   Goto -> Block 4

#  101|   Block 2
#  101|     m2_0(int)        = Phi                : from 0:m0_9, from 4:m4_8
#  101|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test10)
#  101|         ResultMemoryAccess = UnknownVvar(IR: test10)
#  101|     m2_1(int)        = Phi                : from 0:m0_14, from 4:m4_1
#  101|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test10)
#  101|         ResultMemoryAccess = UnknownVvar(IR: test10)
#  101|     r2_2(glval<int>) = VariableAddress[i] : 
#  101|     r2_3(int)        = Load               : r2_2, m2_0
#  101|         OperandMemoryAccess(CopySource) = i[0..3]
#  101|     r2_4(int)        = Constant[10]       : 
#  101|     r2_5(bool)       = CompareLT          : r2_3, r2_4
#  101|     v2_6(void)       = ConditionalBranch  : r2_5
#-----|   False -> Block 5
#-----|   True -> Block 3

#  102|   Block 3
#  102|     r3_0(int)        = Constant[0]        : 
#  102|     r3_1(glval<int>) = VariableAddress[x] : 
#  102|     m3_2(int)        = Store              : r3_1, r3_0
#  102|         ResultMemoryAccess = x[0..3]
#-----|   Goto -> Block 4

#  103|   Block 4
#  103|     m4_0(int)        = Phi                : from 1:m0_9, from 3:m2_0
#  103|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test10)
#  103|         ResultMemoryAccess = UnknownVvar(IR: test10)
#  103|     m4_1(int)        = Phi                : from 1:m0_14, from 3:m3_2
#  103|         OperandMemoryAccess(Phi) = UnknownVvar(IR: test10)
#  103|         ResultMemoryAccess = UnknownVvar(IR: test10)
#  103|     v4_2(void)       = NoOp               : 
#  101|     r4_3(glval<int>) = VariableAddress[d] : 
#  101|     r4_4(int)        = Load               : r4_3, m0_6
#  101|         OperandMemoryAccess(CopySource) = d[0..3]
#  101|     r4_5(glval<int>) = VariableAddress[i] : 
#  101|     r4_6(int)        = Load               : r4_5, m4_0
#  101|         OperandMemoryAccess(CopySource) = i[0..3]
#  101|     r4_7(int)        = Add                : r4_6, r4_4
#  101|     m4_8(int)        = Store              : r4_5, r4_7
#  101|         ResultMemoryAccess = i[0..3]
#-----|   Goto -> Block 2

#  105|   Block 5
#  105|     r5_0(glval<unknown>) = FunctionAddress[sink]    : 
#  105|     r5_1(glval<int>)     = VariableAddress[x]       : 
#  105|     r5_2(int)            = Load                     : r5_1, m2_1
#  105|         OperandMemoryAccess(CopySource) = x[0..3]
#  105|     v5_3(void)           = Call                     : r5_0, r5_2
#  105|     mu5_4(unknown)       = ^CallSideEffect          : mu0_2
#  105|         OperandMemoryAccess(Operand) = UnknownVvar(IR: test10)
#  105|         ResultMemoryAccess = UnknownVvar(IR: test10)
#  106|     v5_5(void)           = NoOp                     : 
#   96|     r5_6(glval<int>)     = VariableAddress[#return] : 
#   96|     v5_7(void)           = ReturnValue              : r5_6
#   96|     v5_8(void)           = UnmodeledUse             : mu*
#   96|     v5_9(void)           = ExitFunction             : 
